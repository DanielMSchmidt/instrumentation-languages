grammar de.cau.cs.se.instrumentation.rl.RecordLang with org.eclipse.xtext.common.Terminals

generate recordLang "http://www.cau.de/cs/se/instrumentation/rl/RecordLang"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model:
	'package' name = QualifiedName
	(packages += Package)*
	(imports += Import)*
	(records += RecordType)*
;

Import:
	'import' importedNamespace = QualifiedNameWithWildcard
;

Package:
	'use' name=ID package=[ecore::EPackage|STRING] 
;

QualifiedName:
  ID (=>'.' ID)*;

QualifiedNameWithWildcard:
	QualifiedName ('.' '*')?
;

RecordType:
	'struct' name=ID (':' parent=[RecordType|QualifiedName])? '{'
		(properties+=Property | constants+=Constant)*
	'}'
;

Constant:
	'const' type=Classifier name=ID '=' value=Literal
;

Property:
	type=Classifier name=ID 
		('{' (properties+=ReferenceProperty)* '}' | 
		'=' value=Literal)
;

Classifier:
	(package=[Package] '.')? class=[ecore::EClassifier|ID] (sizes+=ArraySize)*
;

ArraySize: {ArraySize}
	'[' (size=INT)? ']' 
;

ReferenceProperty:
	ref=[ecore::EStructuralFeature|ID] '{' (properties+=ReferenceProperty)* '}'
;

Literal:
	StringLiteral | IntLiteral | FloatLiteral | BooleanLiteral | ConstantLiteral
;

StringLiteral:
	value=STRING
;

IntLiteral:
	value=INT
;

FloatLiteral:
	value=FLOAT
;

BooleanLiteral: 
	value=BOOLEAN
;

ConstantLiteral:
	value=[Constant|ID]
;

// terminals
terminal fragment NUMBER :
    '0'..'9';
   
// redefine INT terminal to allow negative numbers
terminal INT returns ecore::EInt:
    '-'? NUMBER+;

// make sure the Float rule does not shadow the INT rule
terminal FLOAT returns ecore::EFloatObject :
    '-'? NUMBER+ ('.' NUMBER*) (("e"|"E") ("+"|"-")? NUMBER+)? 'f'? |
    '-'? NUMBER+ 'f';
    
// introduce boolean values
terminal BOOLEAN returns ecore::EBooleanObject :
    'true' | 'false';