grammar de.cau.cs.se.instrumentation.rl.RecordLang with org.eclipse.xtext.common.Terminals

generate recordLang "http://www.cau.de/cs/se/instrumentation/rl/RecordLang"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model:
	'package' name = QualifiedName
	(packages += Package)*
	(imports += Import)*
	(records += RecordType)*
;

Import:
	'import' importedNamespace = QualifiedNameWithWildcard
;

Package:
	'use' name=ID package=[ecore::EPackage|STRING] 
;

QualifiedName:
  ID (=>'.' ID)*;

QualifiedNameWithWildcard:
	QualifiedName ('.' '*')?
;

RecordType:
	'struct' name=ID ('extends' parent=[RecordType|QualifiedName])? '{'
		(properties+=Property | defaults+=Default)*
	'}'
;

Default:
	'const' type=Classifier name=ID '=' value=Literal
;

Property:
	type=Classifier name=ID 
		('{' (properties+=ReferenceProperty)* '}' | 
		'=' value=Literal |
		'=' const=Constant)
;

Constant:
	name=ID value=Literal
;

Classifier:
	(package=[Package] '.')? class=[ecore::EClassifier|ID]
;

ReferenceProperty:
	(modifier=Modifier)? ref=[ecore::EStructuralFeature|ID] '{' (properties+=ReferenceProperty)* '}'
;

enum Modifier:
	DEFAULT = 'default' |
	OPTIONAL = 'optional'
;

Literal:
	StringLiteral | IntLiteral | FloatLiteral | BooleanLiteral | DefaultLiteral
;

StringLiteral:
	value=STRING
;

IntLiteral:
	value=INTEGER
;

FloatLiteral:
	value=FLOAT
;

BooleanLiteral: 
	{BooleanLiteral} ((value?='true')|'false')
;

DefaultLiteral:
	value=[Default|ID]
;

// terminals
terminal INTEGER returns ecore::EInt: ('+'|'-')? INT;

terminal FLOAT returns ecore::EFloat: ('+'|'-')? (INT '.' INT? | '.' INT);
