/*
 * generated by Xtext
 */
grammar InternalAspectLang;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package kieker.tools.al.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package kieker.tools.al.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import kieker.tools.al.services.AspectLangGrammarAccess;

}

@parser::members {
 
 	private AspectLangGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AspectLangGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleAspectModel
entryRuleAspectModel 
:
{ before(grammarAccess.getAspectModelRule()); }
	 ruleAspectModel
{ after(grammarAccess.getAspectModelRule()); } 
	 EOF 
;

// Rule AspectModel
ruleAspectModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAspectModelAccess().getGroup()); }
(rule__AspectModel__Group__0)
{ after(grammarAccess.getAspectModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleApplicationModel
entryRuleApplicationModel 
:
{ before(grammarAccess.getApplicationModelRule()); }
	 ruleApplicationModel
{ after(grammarAccess.getApplicationModelRule()); } 
	 EOF 
;

// Rule ApplicationModel
ruleApplicationModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getApplicationModelAccess().getGroup()); }
(rule__ApplicationModel__Group__0)
{ after(grammarAccess.getApplicationModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAspect
entryRuleAspect 
:
{ before(grammarAccess.getAspectRule()); }
	 ruleAspect
{ after(grammarAccess.getAspectRule()); } 
	 EOF 
;

// Rule Aspect
ruleAspect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAspectAccess().getGroup()); }
(rule__Aspect__Group__0)
{ after(grammarAccess.getAspectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUtilizeAdvice
entryRuleUtilizeAdvice 
:
{ before(grammarAccess.getUtilizeAdviceRule()); }
	 ruleUtilizeAdvice
{ after(grammarAccess.getUtilizeAdviceRule()); } 
	 EOF 
;

// Rule UtilizeAdvice
ruleUtilizeAdvice
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUtilizeAdviceAccess().getGroup()); }
(rule__UtilizeAdvice__Group__0)
{ after(grammarAccess.getUtilizeAdviceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdvice
entryRuleAdvice 
:
{ before(grammarAccess.getAdviceRule()); }
	 ruleAdvice
{ after(grammarAccess.getAdviceRule()); } 
	 EOF 
;

// Rule Advice
ruleAdvice
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdviceAccess().getGroup()); }
(rule__Advice__Group__0)
{ after(grammarAccess.getAdviceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdviceParameterDeclaration
entryRuleAdviceParameterDeclaration 
:
{ before(grammarAccess.getAdviceParameterDeclarationRule()); }
	 ruleAdviceParameterDeclaration
{ after(grammarAccess.getAdviceParameterDeclarationRule()); } 
	 EOF 
;

// Rule AdviceParameterDeclaration
ruleAdviceParameterDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdviceParameterDeclarationAccess().getGroup()); }
(rule__AdviceParameterDeclaration__Group__0)
{ after(grammarAccess.getAdviceParameterDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollector
entryRuleCollector 
:
{ before(grammarAccess.getCollectorRule()); }
	 ruleCollector
{ after(grammarAccess.getCollectorRule()); } 
	 EOF 
;

// Rule Collector
ruleCollector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectorAccess().getGroup()); }
(rule__Collector__Group__0)
{ after(grammarAccess.getCollectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getGroup()); }
(rule__Event__Group__0)
{ after(grammarAccess.getEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceValue
entryRuleReferenceValue 
:
{ before(grammarAccess.getReferenceValueRule()); }
	 ruleReferenceValue
{ after(grammarAccess.getReferenceValueRule()); } 
	 EOF 
;

// Rule ReferenceValue
ruleReferenceValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceValueAccess().getGroup()); }
(rule__ReferenceValue__Group__0)
{ after(grammarAccess.getReferenceValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
(rule__Property__Alternatives)
{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInternalFunctionProperty
entryRuleInternalFunctionProperty 
:
{ before(grammarAccess.getInternalFunctionPropertyRule()); }
	 ruleInternalFunctionProperty
{ after(grammarAccess.getInternalFunctionPropertyRule()); } 
	 EOF 
;

// Rule InternalFunctionProperty
ruleInternalFunctionProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInternalFunctionPropertyAccess().getFunctionAssignment()); }
(rule__InternalFunctionProperty__FunctionAssignment)
{ after(grammarAccess.getInternalFunctionPropertyAccess().getFunctionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReflectionProperty
entryRuleReflectionProperty 
:
{ before(grammarAccess.getReflectionPropertyRule()); }
	 ruleReflectionProperty
{ after(grammarAccess.getReflectionPropertyRule()); } 
	 EOF 
;

// Rule ReflectionProperty
ruleReflectionProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReflectionPropertyAccess().getGroup()); }
(rule__ReflectionProperty__Group__0)
{ after(grammarAccess.getReflectionPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuntimeProperty
entryRuleRuntimeProperty 
:
{ before(grammarAccess.getRuntimePropertyRule()); }
	 ruleRuntimeProperty
{ after(grammarAccess.getRuntimePropertyRule()); } 
	 EOF 
;

// Rule RuntimeProperty
ruleRuntimeProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuntimePropertyAccess().getGroup()); }
(rule__RuntimeProperty__Group__0)
{ after(grammarAccess.getRuntimePropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdviceParameter
entryRuleAdviceParameter 
:
{ before(grammarAccess.getAdviceParameterRule()); }
	 ruleAdviceParameter
{ after(grammarAccess.getAdviceParameterRule()); } 
	 EOF 
;

// Rule AdviceParameter
ruleAdviceParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdviceParameterAccess().getGroup()); }
(rule__AdviceParameter__Group__0)
{ after(grammarAccess.getAdviceParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePointcut
entryRulePointcut 
:
{ before(grammarAccess.getPointcutRule()); }
	 rulePointcut
{ after(grammarAccess.getPointcutRule()); } 
	 EOF 
;

// Rule Pointcut
rulePointcut
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPointcutAccess().getGroup()); }
(rule__Pointcut__Group__0)
{ after(grammarAccess.getPointcutAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getGroup()); }
(rule__Annotation__Group__0)
{ after(grammarAccess.getAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocationQuery
entryRuleLocationQuery 
:
{ before(grammarAccess.getLocationQueryRule()); }
	 ruleLocationQuery
{ after(grammarAccess.getLocationQueryRule()); } 
	 EOF 
;

// Rule LocationQuery
ruleLocationQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocationQueryAccess().getGroup()); }
(rule__LocationQuery__Group__0)
{ after(grammarAccess.getLocationQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompositionQuery
entryRuleCompositionQuery 
:
{ before(grammarAccess.getCompositionQueryRule()); }
	 ruleCompositionQuery
{ after(grammarAccess.getCompositionQueryRule()); } 
	 EOF 
;

// Rule CompositionQuery
ruleCompositionQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompositionQueryAccess().getGroup()); }
(rule__CompositionQuery__Group__0)
{ after(grammarAccess.getCompositionQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationQuery
entryRuleOperationQuery 
:
{ before(grammarAccess.getOperationQueryRule()); }
	 ruleOperationQuery
{ after(grammarAccess.getOperationQueryRule()); } 
	 EOF 
;

// Rule OperationQuery
ruleOperationQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationQueryAccess().getGroup()); }
(rule__OperationQuery__Group__0)
{ after(grammarAccess.getOperationQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterQuery
entryRuleParameterQuery 
:
{ before(grammarAccess.getParameterQueryRule()); }
	 ruleParameterQuery
{ after(grammarAccess.getParameterQueryRule()); } 
	 EOF 
;

// Rule ParameterQuery
ruleParameterQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterQueryAccess().getGroup()); }
(rule__ParameterQuery__Group__0)
{ after(grammarAccess.getParameterQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNode
entryRuleNode 
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeAccess().getGroup()); }
(rule__Node__Group__0)
{ after(grammarAccess.getNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainerNode
entryRuleContainerNode 
:
{ before(grammarAccess.getContainerNodeRule()); }
	 ruleContainerNode
{ after(grammarAccess.getContainerNodeRule()); } 
	 EOF 
;

// Rule ContainerNode
ruleContainerNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContainerNodeAccess().getContainerAssignment()); }
(rule__ContainerNode__ContainerAssignment)
{ after(grammarAccess.getContainerNodeAccess().getContainerAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWildcardNode
entryRuleWildcardNode 
:
{ before(grammarAccess.getWildcardNodeRule()); }
	 ruleWildcardNode
{ after(grammarAccess.getWildcardNodeRule()); } 
	 EOF 
;

// Rule WildcardNode
ruleWildcardNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWildcardNodeAccess().getGroup()); }
(rule__WildcardNode__Group__0)
{ after(grammarAccess.getWildcardNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubPathNode
entryRuleSubPathNode 
:
{ before(grammarAccess.getSubPathNodeRule()); }
	 ruleSubPathNode
{ after(grammarAccess.getSubPathNodeRule()); } 
	 EOF 
;

// Rule SubPathNode
ruleSubPathNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubPathNodeAccess().getGroup()); }
(rule__SubPathNode__Group__0)
{ after(grammarAccess.getSubPathNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParentNode
entryRuleParentNode 
:
{ before(grammarAccess.getParentNodeRule()); }
	 ruleParentNode
{ after(grammarAccess.getParentNodeRule()); } 
	 EOF 
;

// Rule ParentNode
ruleParentNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParentNodeAccess().getGroup()); }
(rule__ParentNode__Group__0)
{ after(grammarAccess.getParentNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyConstraint
entryRulePropertyConstraint 
:
{ before(grammarAccess.getPropertyConstraintRule()); }
	 rulePropertyConstraint
{ after(grammarAccess.getPropertyConstraintRule()); } 
	 EOF 
;

// Rule PropertyConstraint
rulePropertyConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyConstraintAccess().getGroup()); }
(rule__PropertyConstraint__Group__0)
{ after(grammarAccess.getPropertyConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyConstraintCompare
entryRulePropertyConstraintCompare 
:
{ before(grammarAccess.getPropertyConstraintCompareRule()); }
	 rulePropertyConstraintCompare
{ after(grammarAccess.getPropertyConstraintCompareRule()); } 
	 EOF 
;

// Rule PropertyConstraintCompare
rulePropertyConstraintCompare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyConstraintCompareAccess().getGroup()); }
(rule__PropertyConstraintCompare__Group__0)
{ after(grammarAccess.getPropertyConstraintCompareAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraintElement
entryRuleConstraintElement 
:
{ before(grammarAccess.getConstraintElementRule()); }
	 ruleConstraintElement
{ after(grammarAccess.getConstraintElementRule()); } 
	 EOF 
;

// Rule ConstraintElement
ruleConstraintElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintElementAccess().getAlternatives()); }
(rule__ConstraintElement__Alternatives)
{ after(grammarAccess.getConstraintElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalQuery
entryRuleLocalQuery 
:
{ before(grammarAccess.getLocalQueryRule()); }
	 ruleLocalQuery
{ after(grammarAccess.getLocalQueryRule()); } 
	 EOF 
;

// Rule LocalQuery
ruleLocalQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalQueryAccess().getGroup()); }
(rule__LocalQuery__Group__0)
{ after(grammarAccess.getLocalQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelProperty
entryRuleModelProperty 
:
{ before(grammarAccess.getModelPropertyRule()); }
	 ruleModelProperty
{ after(grammarAccess.getModelPropertyRule()); } 
	 EOF 
;

// Rule ModelProperty
ruleModelProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelPropertyAccess().getGroup()); }
(rule__ModelProperty__Group__0)
{ after(grammarAccess.getModelPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeof
entryRuleTypeof 
:
{ before(grammarAccess.getTypeofRule()); }
	 ruleTypeof
{ after(grammarAccess.getTypeofRule()); } 
	 EOF 
;

// Rule Typeof
ruleTypeof
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeofAccess().getGroup()); }
(rule__Typeof__Group__0)
{ after(grammarAccess.getTypeofAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral 
:
{ before(grammarAccess.getFloatLiteralRule()); }
	 ruleFloatLiteral
{ after(grammarAccess.getFloatLiteralRule()); } 
	 EOF 
;

// Rule FloatLiteral
ruleFloatLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatLiteralAccess().getValueAssignment()); }
(rule__FloatLiteral__ValueAssignment)
{ after(grammarAccess.getFloatLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntLiteral
entryRuleIntLiteral 
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
(rule__IntLiteral__ValueAssignment)
{ after(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
(rule__StringLiteral__ValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeReference
entryRuleTypeReference 
:
{ before(grammarAccess.getTypeReferenceRule()); }
	 ruleTypeReference
{ after(grammarAccess.getTypeReferenceRule()); } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeReferenceAccess().getGroup()); }
(rule__TypeReference__Group__0)
{ after(grammarAccess.getTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule InsertionPoint
ruleInsertionPoint
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertionPointAccess().getAlternatives()); }
(rule__InsertionPoint__Alternatives)
{ after(grammarAccess.getInsertionPointAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule InternalFunction
ruleInternalFunction
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalFunctionAccess().getAlternatives()); }
(rule__InternalFunction__Alternatives)
{ after(grammarAccess.getInternalFunctionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ReflectionFunction
ruleReflectionFunction
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReflectionFunctionAccess().getAlternatives()); }
(rule__ReflectionFunction__Alternatives)
{ after(grammarAccess.getReflectionFunctionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Technology
ruleTechnology
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTechnologyAccess().getAlternatives()); }
(rule__Technology__Alternatives)
{ after(grammarAccess.getTechnologyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule QueryModifier
ruleQueryModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryModifierAccess().getAlternatives()); }
(rule__QueryModifier__Alternatives)
{ after(grammarAccess.getQueryModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LogicOperator
ruleLogicOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOperatorAccess().getAlternatives()); }
(rule__LogicOperator__Alternatives)
{ after(grammarAccess.getLogicOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CompareOperator
ruleCompareOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
(rule__CompareOperator__Alternatives)
{ after(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AspectModel__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getAdvicesAssignment_4_0()); }
(rule__AspectModel__AdvicesAssignment_4_0)
{ after(grammarAccess.getAspectModelAccess().getAdvicesAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getAspectModelAccess().getPointcutsAssignment_4_1()); }
(rule__AspectModel__PointcutsAssignment_4_1)
{ after(grammarAccess.getAspectModelAccess().getPointcutsAssignment_4_1()); }
)

    |(
{ before(grammarAccess.getAspectModelAccess().getAspectsAssignment_4_2()); }
(rule__AspectModel__AspectsAssignment_4_2)
{ after(grammarAccess.getAspectModelAccess().getAspectsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getLiteralParserRuleCall_0()); }
	ruleLiteral
{ after(grammarAccess.getValueAccess().getLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getReferenceValueParserRuleCall_1()); }
	ruleReferenceValue
{ after(grammarAccess.getValueAccess().getReferenceValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getInternalFunctionPropertyParserRuleCall_2()); }
	ruleInternalFunctionProperty
{ after(grammarAccess.getValueAccess().getInternalFunctionPropertyParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getAdviceParameterParserRuleCall_3()); }
	ruleAdviceParameter
{ after(grammarAccess.getValueAccess().getAdviceParameterParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getRuntimePropertyParserRuleCall_0()); }
	ruleRuntimeProperty
{ after(grammarAccess.getPropertyAccess().getRuntimePropertyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getReflectionPropertyParserRuleCall_1()); }
	ruleReflectionProperty
{ after(grammarAccess.getPropertyAccess().getReflectionPropertyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getGroup_1_0()); }
(rule__LocationQuery__Group_1_0__0)
{ after(grammarAccess.getLocationQueryAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getLocationQueryAccess().getCompositionAssignment_1_1()); }
(rule__LocationQuery__CompositionAssignment_1_1)
{ after(grammarAccess.getLocationQueryAccess().getCompositionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getGroup_3_0()); }
(rule__OperationQuery__Group_3_0__0)
{ after(grammarAccess.getOperationQueryAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getOperationQueryAccess().getAsteriskKeyword_3_1()); }

	'*' 

{ after(grammarAccess.getOperationQueryAccess().getAsteriskKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getTypeAssignment_2_0()); }
(rule__ParameterQuery__TypeAssignment_2_0)
{ after(grammarAccess.getParameterQueryAccess().getTypeAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getParameterQueryAccess().getAsteriskKeyword_2_1()); }

	'*' 

{ after(grammarAccess.getParameterQueryAccess().getAsteriskKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getSubPathNodeParserRuleCall_0_0()); }
	ruleSubPathNode
{ after(grammarAccess.getNodeAccess().getSubPathNodeParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getNodeAccess().getWildcardNodeParserRuleCall_0_1()); }
	ruleWildcardNode
{ after(grammarAccess.getNodeAccess().getWildcardNodeParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getNodeAccess().getParentNodeParserRuleCall_0_2()); }
	ruleParentNode
{ after(grammarAccess.getNodeAccess().getParentNodeParserRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getNodeAccess().getContainerNodeParserRuleCall_0_3()); }
	ruleContainerNode
{ after(grammarAccess.getNodeAccess().getContainerNodeParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintElementAccess().getLiteralParserRuleCall_0()); }
	ruleLiteral
{ after(grammarAccess.getConstraintElementAccess().getLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstraintElementAccess().getLocalQueryParserRuleCall_1()); }
	ruleLocalQuery
{ after(grammarAccess.getConstraintElementAccess().getLocalQueryParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalQuery__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalQueryAccess().getPropertyAssignment_1_0()); }
(rule__LocalQuery__PropertyAssignment_1_0)
{ after(grammarAccess.getLocalQueryAccess().getPropertyAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getLocalQueryAccess().getTypeofAssignment_1_1()); }
(rule__LocalQuery__TypeofAssignment_1_1)
{ after(grammarAccess.getLocalQueryAccess().getTypeofAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_0()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_1()); }
	ruleIntLiteral
{ after(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_2()); }
	ruleFloatLiteral
{ after(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionPoint__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertionPointAccess().getBEFOREEnumLiteralDeclaration_0()); }
(	'before' 
)
{ after(grammarAccess.getInsertionPointAccess().getBEFOREEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getInsertionPointAccess().getAFTEREnumLiteralDeclaration_1()); }
(	'after' 
)
{ after(grammarAccess.getInsertionPointAccess().getAFTEREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getInsertionPointAccess().getAFTER_EXCEPTIONEnumLiteralDeclaration_2()); }
(	'exception' 
)
{ after(grammarAccess.getInsertionPointAccess().getAFTER_EXCEPTIONEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InternalFunction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalFunctionAccess().getTIMEEnumLiteralDeclaration_0()); }
(	'time' 
)
{ after(grammarAccess.getInternalFunctionAccess().getTIMEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getInternalFunctionAccess().getTRACE_IDEnumLiteralDeclaration_1()); }
(	'traceId' 
)
{ after(grammarAccess.getInternalFunctionAccess().getTRACE_IDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getInternalFunctionAccess().getORDER_INDEXEnumLiteralDeclaration_2()); }
(	'orderIndex' 
)
{ after(grammarAccess.getInternalFunctionAccess().getORDER_INDEXEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReflectionFunction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReflectionFunctionAccess().getNAMEEnumLiteralDeclaration_0()); }
(	'name' 
)
{ after(grammarAccess.getReflectionFunctionAccess().getNAMEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getReflectionFunctionAccess().getSIGNATUREEnumLiteralDeclaration_1()); }
(	'signature' 
)
{ after(grammarAccess.getReflectionFunctionAccess().getSIGNATUREEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getReflectionFunctionAccess().getCLASSEnumLiteralDeclaration_2()); }
(	'classname' 
)
{ after(grammarAccess.getReflectionFunctionAccess().getCLASSEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getReflectionFunctionAccess().getRETURN_TYPEEnumLiteralDeclaration_3()); }
(	'return-type' 
)
{ after(grammarAccess.getReflectionFunctionAccess().getRETURN_TYPEEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Technology__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTechnologyAccess().getJAVA_EEEnumLiteralDeclaration_0()); }
(	'javaee' 
)
{ after(grammarAccess.getTechnologyAccess().getJAVA_EEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTechnologyAccess().getSERVLETEnumLiteralDeclaration_1()); }
(	'servlet' 
)
{ after(grammarAccess.getTechnologyAccess().getSERVLETEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTechnologyAccess().getSPRINGEnumLiteralDeclaration_2()); }
(	'spring' 
)
{ after(grammarAccess.getTechnologyAccess().getSPRINGEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTechnologyAccess().getASPECT_JEnumLiteralDeclaration_3()); }
(	'aspectj' 
)
{ after(grammarAccess.getTechnologyAccess().getASPECT_JEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QueryModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryModifierAccess().getINCLUDEEnumLiteralDeclaration_0()); }
(	'include' 
)
{ after(grammarAccess.getQueryModifierAccess().getINCLUDEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getQueryModifierAccess().getEXCLUDEEnumLiteralDeclaration_1()); }
(	'exclude' 
)
{ after(grammarAccess.getQueryModifierAccess().getEXCLUDEEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOperatorAccess().getANDEnumLiteralDeclaration_0()); }
(	'&&' 
)
{ after(grammarAccess.getLogicOperatorAccess().getANDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getLogicOperatorAccess().getOREnumLiteralDeclaration_1()); }
(	'||' 
)
{ after(grammarAccess.getLogicOperatorAccess().getOREnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLIKEEnumLiteralDeclaration_1()); }
(	'~' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLIKEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_2()); }
(	'!=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGREnumLiteralDeclaration_3()); }
(	'>' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGREnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLWEnumLiteralDeclaration_4()); }
(	'<' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLWEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_5()); }
(	'>=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_6()); }
(	'<=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AspectModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectModel__Group__0__Impl
	rule__AspectModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getAspectModelAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AspectModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectModel__Group__1__Impl
	rule__AspectModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getNameAssignment_1()); }
(rule__AspectModel__NameAssignment_1)
{ after(grammarAccess.getAspectModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AspectModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectModel__Group__2__Impl
	rule__AspectModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getImportsAssignment_2()); }
(rule__AspectModel__ImportsAssignment_2)*
{ after(grammarAccess.getAspectModelAccess().getImportsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AspectModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectModel__Group__3__Impl
	rule__AspectModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getSourcesAssignment_3()); }
(rule__AspectModel__SourcesAssignment_3)*
{ after(grammarAccess.getAspectModelAccess().getSourcesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AspectModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectModel__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getAlternatives_4()); }
(rule__AspectModel__Alternatives_4)*
{ after(grammarAccess.getAspectModelAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ApplicationModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationModel__Group__0__Impl
	rule__ApplicationModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getUseKeyword_0()); }

	'use' 

{ after(grammarAccess.getApplicationModelAccess().getUseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationModel__Group__1__Impl
	rule__ApplicationModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getHandlerAssignment_1()); }
(rule__ApplicationModel__HandlerAssignment_1)
{ after(grammarAccess.getApplicationModelAccess().getHandlerAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationModel__Group__2__Impl
	rule__ApplicationModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getOnKeyword_2()); }

	'on' 

{ after(grammarAccess.getApplicationModelAccess().getOnKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationModel__Group__3__Impl
	rule__ApplicationModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getNameAssignment_3()); }
(rule__ApplicationModel__NameAssignment_3)
{ after(grammarAccess.getApplicationModelAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationModel__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getModelAssignment_4()); }
(rule__ApplicationModel__ModelAssignment_4)
{ after(grammarAccess.getApplicationModelAccess().getModelAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Aspect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group__0__Impl
	rule__Aspect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getAspectKeyword_0()); }

	'aspect' 

{ after(grammarAccess.getAspectAccess().getAspectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aspect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group__1__Impl
	rule__Aspect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getPointcutAssignment_1()); }
(rule__Aspect__PointcutAssignment_1)
{ after(grammarAccess.getAspectAccess().getPointcutAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aspect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group__2__Impl
	rule__Aspect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getAspectAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aspect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group__3__Impl
	rule__Aspect__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getAdvicesAssignment_3()); }
(rule__Aspect__AdvicesAssignment_3)
{ after(grammarAccess.getAspectAccess().getAdvicesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aspect__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getGroup_4()); }
(rule__Aspect__Group_4__0)*
{ after(grammarAccess.getAspectAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Aspect__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group_4__0__Impl
	rule__Aspect__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getAspectAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aspect__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getAdvicesAssignment_4_1()); }
(rule__Aspect__AdvicesAssignment_4_1)
{ after(grammarAccess.getAspectAccess().getAdvicesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UtilizeAdvice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeAdvice__Group__0__Impl
	rule__UtilizeAdvice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeAdvice__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeAdviceAccess().getAdviceAssignment_0()); }
(rule__UtilizeAdvice__AdviceAssignment_0)
{ after(grammarAccess.getUtilizeAdviceAccess().getAdviceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UtilizeAdvice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeAdvice__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeAdvice__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeAdviceAccess().getGroup_1()); }
(rule__UtilizeAdvice__Group_1__0)?
{ after(grammarAccess.getUtilizeAdviceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UtilizeAdvice__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeAdvice__Group_1__0__Impl
	rule__UtilizeAdvice__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeAdvice__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeAdviceAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getUtilizeAdviceAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UtilizeAdvice__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeAdvice__Group_1__1__Impl
	rule__UtilizeAdvice__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeAdvice__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeAdviceAccess().getGroup_1_1()); }
(rule__UtilizeAdvice__Group_1_1__0)?
{ after(grammarAccess.getUtilizeAdviceAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UtilizeAdvice__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeAdvice__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeAdvice__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeAdviceAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getUtilizeAdviceAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UtilizeAdvice__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeAdvice__Group_1_1__0__Impl
	rule__UtilizeAdvice__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeAdvice__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeAdviceAccess().getParameterAssignmentsAssignment_1_1_0()); }
(rule__UtilizeAdvice__ParameterAssignmentsAssignment_1_1_0)
{ after(grammarAccess.getUtilizeAdviceAccess().getParameterAssignmentsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UtilizeAdvice__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeAdvice__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeAdvice__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeAdviceAccess().getGroup_1_1_1()); }
(rule__UtilizeAdvice__Group_1_1_1__0)*
{ after(grammarAccess.getUtilizeAdviceAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UtilizeAdvice__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeAdvice__Group_1_1_1__0__Impl
	rule__UtilizeAdvice__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeAdvice__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeAdviceAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getUtilizeAdviceAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UtilizeAdvice__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeAdvice__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeAdvice__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeAdviceAccess().getParameterAssignmentsAssignment_1_1_1_1()); }
(rule__UtilizeAdvice__ParameterAssignmentsAssignment_1_1_1_1)
{ after(grammarAccess.getUtilizeAdviceAccess().getParameterAssignmentsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Advice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__0__Impl
	rule__Advice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getAdviceKeyword_0()); }

	'advice' 

{ after(grammarAccess.getAdviceAccess().getAdviceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__1__Impl
	rule__Advice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getNameAssignment_1()); }
(rule__Advice__NameAssignment_1)
{ after(grammarAccess.getAdviceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__2__Impl
	rule__Advice__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getGroup_2()); }
(rule__Advice__Group_2__0)?
{ after(grammarAccess.getAdviceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__3__Impl
	rule__Advice__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getAdviceAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__4__Impl
	rule__Advice__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getCollectorsAssignment_4()); }
(rule__Advice__CollectorsAssignment_4)*
{ after(grammarAccess.getAdviceAccess().getCollectorsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getAdviceAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Advice__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2__0__Impl
	rule__Advice__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAdviceAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2__1__Impl
	rule__Advice__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getGroup_2_1()); }
(rule__Advice__Group_2_1__0)?
{ after(grammarAccess.getAdviceAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getAdviceAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Advice__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2_1__0__Impl
	rule__Advice__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getParameterDeclarationsAssignment_2_1_0()); }
(rule__Advice__ParameterDeclarationsAssignment_2_1_0)
{ after(grammarAccess.getAdviceAccess().getParameterDeclarationsAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getGroup_2_1_1()); }
(rule__Advice__Group_2_1_1__0)*
{ after(grammarAccess.getAdviceAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Advice__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2_1_1__0__Impl
	rule__Advice__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getCommaKeyword_2_1_1_0()); }

	',' 

{ after(grammarAccess.getAdviceAccess().getCommaKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getParameterDeclarationsAssignment_2_1_1_1()); }
(rule__Advice__ParameterDeclarationsAssignment_2_1_1_1)
{ after(grammarAccess.getAdviceAccess().getParameterDeclarationsAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdviceParameterDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdviceParameterDeclaration__Group__0__Impl
	rule__AdviceParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceParameterDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceParameterDeclarationAccess().getTypeAssignment_0()); }
(rule__AdviceParameterDeclaration__TypeAssignment_0)
{ after(grammarAccess.getAdviceParameterDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdviceParameterDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdviceParameterDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceParameterDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceParameterDeclarationAccess().getNameAssignment_1()); }
(rule__AdviceParameterDeclaration__NameAssignment_1)
{ after(grammarAccess.getAdviceParameterDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Collector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Collector__Group__0__Impl
	rule__Collector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getInsertionPointAssignment_0()); }
(rule__Collector__InsertionPointAssignment_0)
{ after(grammarAccess.getCollectorAccess().getInsertionPointAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Collector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Collector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCollectorAccess().getEventsAssignment_1()); }
(rule__Collector__EventsAssignment_1)
{ after(grammarAccess.getCollectorAccess().getEventsAssignment_1()); }
)
(
{ before(grammarAccess.getCollectorAccess().getEventsAssignment_1()); }
(rule__Collector__EventsAssignment_1)*
{ after(grammarAccess.getCollectorAccess().getEventsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Event__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getTypeAssignment_0()); }
(rule__Event__TypeAssignment_0)
{ after(grammarAccess.getEventAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__1__Impl
	rule__Event__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getEventAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__2__Impl
	rule__Event__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getGroup_2()); }
(rule__Event__Group_2__0)?
{ after(grammarAccess.getEventAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getEventAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Event__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_2__0__Impl
	rule__Event__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getInitializationsAssignment_2_0()); }
(rule__Event__InitializationsAssignment_2_0)
{ after(grammarAccess.getEventAccess().getInitializationsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getGroup_2_1()); }
(rule__Event__Group_2_1__0)*
{ after(grammarAccess.getEventAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Event__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_2_1__0__Impl
	rule__Event__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getEventAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getInitializationsAssignment_2_1_1()); }
(rule__Event__InitializationsAssignment_2_1_1)
{ after(grammarAccess.getEventAccess().getInitializationsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceValue__Group__0__Impl
	rule__ReferenceValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceValueAccess().getQueryAssignment_0()); }
(rule__ReferenceValue__QueryAssignment_0)?
{ after(grammarAccess.getReferenceValueAccess().getQueryAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceValueAccess().getPropertyAssignment_1()); }
(rule__ReferenceValue__PropertyAssignment_1)
{ after(grammarAccess.getReferenceValueAccess().getPropertyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReflectionProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReflectionProperty__Group__0__Impl
	rule__ReflectionProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReflectionProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReflectionPropertyAccess().getDollarSignKeyword_0()); }

	'$' 

{ after(grammarAccess.getReflectionPropertyAccess().getDollarSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReflectionProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReflectionProperty__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReflectionProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReflectionPropertyAccess().getFunctionAssignment_1()); }
(rule__ReflectionProperty__FunctionAssignment_1)
{ after(grammarAccess.getReflectionPropertyAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuntimeProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuntimeProperty__Group__0__Impl
	rule__RuntimeProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimePropertyAccess().getRuntimePropertyAction_0()); }
(

)
{ after(grammarAccess.getRuntimePropertyAccess().getRuntimePropertyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuntimeProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuntimeProperty__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimePropertyAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getRuntimePropertyAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdviceParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdviceParameter__Group__0__Impl
	rule__AdviceParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceParameterAccess().getDeclarationAssignment_0()); }
(rule__AdviceParameter__DeclarationAssignment_0)
{ after(grammarAccess.getAdviceParameterAccess().getDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdviceParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdviceParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceParameterAccess().getGroup_1()); }
(rule__AdviceParameter__Group_1__0)?
{ after(grammarAccess.getAdviceParameterAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdviceParameter__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdviceParameter__Group_1__0__Impl
	rule__AdviceParameter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceParameter__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceParameterAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getAdviceParameterAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdviceParameter__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdviceParameter__Group_1__1__Impl
	rule__AdviceParameter__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceParameter__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceParameterAccess().getCollectionAssignment_1_1()); }
(rule__AdviceParameter__CollectionAssignment_1_1)
{ after(grammarAccess.getAdviceParameterAccess().getCollectionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdviceParameter__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdviceParameter__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceParameter__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceParameterAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getAdviceParameterAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Pointcut__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group__0__Impl
	rule__Pointcut__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getAnnotationAssignment_0()); }
(rule__Pointcut__AnnotationAssignment_0)?
{ after(grammarAccess.getPointcutAccess().getAnnotationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group__1__Impl
	rule__Pointcut__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getPointcutKeyword_1()); }

	'pointcut' 

{ after(grammarAccess.getPointcutAccess().getPointcutKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group__2__Impl
	rule__Pointcut__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getNameAssignment_2()); }
(rule__Pointcut__NameAssignment_2)
{ after(grammarAccess.getPointcutAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group__3__Impl
	rule__Pointcut__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getClassKeyword_3()); }

	'class' 

{ after(grammarAccess.getPointcutAccess().getClassKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group__4__Impl
	rule__Pointcut__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getModelAssignment_4()); }
(rule__Pointcut__ModelAssignment_4)
{ after(grammarAccess.getPointcutAccess().getModelAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group__5__Impl
	rule__Pointcut__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getFullStopKeyword_5()); }

	'.' 

{ after(grammarAccess.getPointcutAccess().getFullStopKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group__6__Impl
	rule__Pointcut__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getLocationAssignment_6()); }
(rule__Pointcut__LocationAssignment_6)
{ after(grammarAccess.getPointcutAccess().getLocationAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getGroup_7()); }
(rule__Pointcut__Group_7__0)?
{ after(grammarAccess.getPointcutAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Pointcut__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group_7__0__Impl
	rule__Pointcut__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getOperationKeyword_7_0()); }

	'operation' 

{ after(grammarAccess.getPointcutAccess().getOperationKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getOperationAssignment_7_1()); }
(rule__Pointcut__OperationAssignment_7_1)
{ after(grammarAccess.getPointcutAccess().getOperationAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Annotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__1__Impl
	rule__Annotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getNameAssignment_1()); }
(rule__Annotation__NameAssignment_1)
{ after(grammarAccess.getAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__2__Impl
	rule__Annotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getTechnologiesAssignment_2()); }
(rule__Annotation__TechnologiesAssignment_2)
{ after(grammarAccess.getAnnotationAccess().getTechnologiesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getGroup_3()); }
(rule__Annotation__Group_3__0)
{ after(grammarAccess.getAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Annotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_3__0__Impl
	rule__Annotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getAnnotationAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getTechnologiesAssignment_3_1()); }
(rule__Annotation__TechnologiesAssignment_3_1)
{ after(grammarAccess.getAnnotationAccess().getTechnologiesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocationQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocationQuery__Group__0__Impl
	rule__LocationQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getNodeAssignment_0()); }
(rule__LocationQuery__NodeAssignment_0)
{ after(grammarAccess.getLocationQueryAccess().getNodeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocationQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocationQuery__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getAlternatives_1()); }
(rule__LocationQuery__Alternatives_1)?
{ after(grammarAccess.getLocationQueryAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocationQuery__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocationQuery__Group_1_0__0__Impl
	rule__LocationQuery__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getFullStopKeyword_1_0_0()); }

	'.' 

{ after(grammarAccess.getLocationQueryAccess().getFullStopKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocationQuery__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocationQuery__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getSpecializationAssignment_1_0_1()); }
(rule__LocationQuery__SpecializationAssignment_1_0_1)
{ after(grammarAccess.getLocationQueryAccess().getSpecializationAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompositionQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositionQuery__Group__0__Impl
	rule__CompositionQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getCompositionQueryAction_0()); }
(

)
{ after(grammarAccess.getCompositionQueryAccess().getCompositionQueryAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositionQuery__Group__1__Impl
	rule__CompositionQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getModifierAssignment_1()); }
(rule__CompositionQuery__ModifierAssignment_1)?
{ after(grammarAccess.getCompositionQueryAccess().getModifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionQuery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositionQuery__Group__2__Impl
	rule__CompositionQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getCompositionQueryAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionQuery__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositionQuery__Group__3__Impl
	rule__CompositionQuery__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getSubQueriesAssignment_3()); }
(rule__CompositionQuery__SubQueriesAssignment_3)*
{ after(grammarAccess.getCompositionQueryAccess().getSubQueriesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionQuery__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositionQuery__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getCompositionQueryAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OperationQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationQuery__Group__0__Impl
	rule__OperationQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getOperationQueryAction_0()); }
(

)
{ after(grammarAccess.getOperationQueryAccess().getOperationQueryAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationQuery__Group__1__Impl
	rule__OperationQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getModifierAssignment_1()); }
(rule__OperationQuery__ModifierAssignment_1)?
{ after(grammarAccess.getOperationQueryAccess().getModifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationQuery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationQuery__Group__2__Impl
	rule__OperationQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getReturnTypeAssignment_2()); }
(rule__OperationQuery__ReturnTypeAssignment_2)?
{ after(grammarAccess.getOperationQueryAccess().getReturnTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationQuery__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationQuery__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getAlternatives_3()); }
(rule__OperationQuery__Alternatives_3)
{ after(grammarAccess.getOperationQueryAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OperationQuery__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationQuery__Group_3_0__0__Impl
	rule__OperationQuery__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getOperationReferenceAssignment_3_0_0()); }
(rule__OperationQuery__OperationReferenceAssignment_3_0_0)
{ after(grammarAccess.getOperationQueryAccess().getOperationReferenceAssignment_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationQuery__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationQuery__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getGroup_3_0_1()); }
(rule__OperationQuery__Group_3_0_1__0)?
{ after(grammarAccess.getOperationQueryAccess().getGroup_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationQuery__Group_3_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationQuery__Group_3_0_1__0__Impl
	rule__OperationQuery__Group_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__Group_3_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getLeftParenthesisKeyword_3_0_1_0()); }

	'(' 

{ after(grammarAccess.getOperationQueryAccess().getLeftParenthesisKeyword_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationQuery__Group_3_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationQuery__Group_3_0_1__1__Impl
	rule__OperationQuery__Group_3_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__Group_3_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getParameterQueriesAssignment_3_0_1_1()); }
(rule__OperationQuery__ParameterQueriesAssignment_3_0_1_1)
{ after(grammarAccess.getOperationQueryAccess().getParameterQueriesAssignment_3_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationQuery__Group_3_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationQuery__Group_3_0_1__2__Impl
	rule__OperationQuery__Group_3_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__Group_3_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getGroup_3_0_1_2()); }
(rule__OperationQuery__Group_3_0_1_2__0)*
{ after(grammarAccess.getOperationQueryAccess().getGroup_3_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationQuery__Group_3_0_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationQuery__Group_3_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__Group_3_0_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getRightParenthesisKeyword_3_0_1_3()); }

	')' 

{ after(grammarAccess.getOperationQueryAccess().getRightParenthesisKeyword_3_0_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OperationQuery__Group_3_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationQuery__Group_3_0_1_2__0__Impl
	rule__OperationQuery__Group_3_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__Group_3_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getCommaKeyword_3_0_1_2_0()); }

	',' 

{ after(grammarAccess.getOperationQueryAccess().getCommaKeyword_3_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationQuery__Group_3_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationQuery__Group_3_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__Group_3_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getParameterQueriesAssignment_3_0_1_2_1()); }
(rule__OperationQuery__ParameterQueriesAssignment_3_0_1_2_1)
{ after(grammarAccess.getOperationQueryAccess().getParameterQueriesAssignment_3_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterQuery__Group__0__Impl
	rule__ParameterQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getParameterQueryAction_0()); }
(

)
{ after(grammarAccess.getParameterQueryAccess().getParameterQueryAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterQuery__Group__1__Impl
	rule__ParameterQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getModifierAssignment_1()); }
(rule__ParameterQuery__ModifierAssignment_1)?
{ after(grammarAccess.getParameterQueryAccess().getModifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterQuery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterQuery__Group__2__Impl
	rule__ParameterQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getAlternatives_2()); }
(rule__ParameterQuery__Alternatives_2)
{ after(grammarAccess.getParameterQueryAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterQuery__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterQuery__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getParameterAssignment_3()); }
(rule__ParameterQuery__ParameterAssignment_3)?
{ after(grammarAccess.getParameterQueryAccess().getParameterAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Node__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__0__Impl
	rule__Node__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getAlternatives_0()); }
(rule__Node__Alternatives_0)
{ after(grammarAccess.getNodeAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getGroup_1()); }
(rule__Node__Group_1__0)?
{ after(grammarAccess.getNodeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Node__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_1__0__Impl
	rule__Node__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getNodeAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_1__1__Impl
	rule__Node__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getConstraintAssignment_1_1()); }
(rule__Node__ConstraintAssignment_1_1)
{ after(grammarAccess.getNodeAccess().getConstraintAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getNodeAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WildcardNode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WildcardNode__Group__0__Impl
	rule__WildcardNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardNode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNodeAccess().getWildcardNodeAction_0()); }
(

)
{ after(grammarAccess.getWildcardNodeAccess().getWildcardNodeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WildcardNode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WildcardNode__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardNode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNodeAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getWildcardNodeAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubPathNode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubPathNode__Group__0__Impl
	rule__SubPathNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPathNode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubPathNodeAccess().getSubPathNodeAction_0()); }
(

)
{ after(grammarAccess.getSubPathNodeAccess().getSubPathNodeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubPathNode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubPathNode__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPathNode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubPathNodeAccess().getAsteriskAsteriskKeyword_1()); }

	'**' 

{ after(grammarAccess.getSubPathNodeAccess().getAsteriskAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParentNode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParentNode__Group__0__Impl
	rule__ParentNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParentNode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentNodeAccess().getParentNodeAction_0()); }
(

)
{ after(grammarAccess.getParentNodeAccess().getParentNodeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParentNode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParentNode__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParentNode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentNodeAccess().getUpKeyword_1()); }

	'up' 

{ after(grammarAccess.getParentNodeAccess().getUpKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyConstraint__Group__0__Impl
	rule__PropertyConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintAccess().getPropertyConstraintCompareParserRuleCall_0()); }
	rulePropertyConstraintCompare
{ after(grammarAccess.getPropertyConstraintAccess().getPropertyConstraintCompareParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyConstraint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintAccess().getGroup_1()); }
(rule__PropertyConstraint__Group_1__0)?
{ after(grammarAccess.getPropertyConstraintAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyConstraint__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyConstraint__Group_1__0__Impl
	rule__PropertyConstraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraint__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintAccess().getPropertyConstraintLeftAction_1_0()); }
(

)
{ after(grammarAccess.getPropertyConstraintAccess().getPropertyConstraintLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyConstraint__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyConstraint__Group_1__1__Impl
	rule__PropertyConstraint__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraint__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintAccess().getLogicAssignment_1_1()); }
(rule__PropertyConstraint__LogicAssignment_1_1)
{ after(grammarAccess.getPropertyConstraintAccess().getLogicAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyConstraint__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyConstraint__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraint__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintAccess().getRightAssignment_1_2()); }
(rule__PropertyConstraint__RightAssignment_1_2)
{ after(grammarAccess.getPropertyConstraintAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PropertyConstraintCompare__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyConstraintCompare__Group__0__Impl
	rule__PropertyConstraintCompare__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraintCompare__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintCompareAccess().getConstraintElementParserRuleCall_0()); }
	ruleConstraintElement
{ after(grammarAccess.getPropertyConstraintCompareAccess().getConstraintElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyConstraintCompare__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyConstraintCompare__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraintCompare__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintCompareAccess().getGroup_1()); }
(rule__PropertyConstraintCompare__Group_1__0)?
{ after(grammarAccess.getPropertyConstraintCompareAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyConstraintCompare__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyConstraintCompare__Group_1__0__Impl
	rule__PropertyConstraintCompare__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraintCompare__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintCompareAccess().getPropertyConstraintCompareLeftAction_1_0()); }
(

)
{ after(grammarAccess.getPropertyConstraintCompareAccess().getPropertyConstraintCompareLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyConstraintCompare__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyConstraintCompare__Group_1__1__Impl
	rule__PropertyConstraintCompare__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraintCompare__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintCompareAccess().getCompareAssignment_1_1()); }
(rule__PropertyConstraintCompare__CompareAssignment_1_1)
{ after(grammarAccess.getPropertyConstraintCompareAccess().getCompareAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyConstraintCompare__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyConstraintCompare__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraintCompare__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintCompareAccess().getRightAssignment_1_2()); }
(rule__PropertyConstraintCompare__RightAssignment_1_2)
{ after(grammarAccess.getPropertyConstraintCompareAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LocalQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalQuery__Group__0__Impl
	rule__LocalQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalQueryAccess().getLocationQueryAssignment_0()); }
(rule__LocalQuery__LocationQueryAssignment_0)?
{ after(grammarAccess.getLocalQueryAccess().getLocationQueryAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalQuery__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalQueryAccess().getAlternatives_1()); }
(rule__LocalQuery__Alternatives_1)
{ after(grammarAccess.getLocalQueryAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModelProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelProperty__Group__0__Impl
	rule__ModelProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelPropertyAccess().getNumberSignKeyword_0()); }

	'#' 

{ after(grammarAccess.getModelPropertyAccess().getNumberSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelProperty__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelPropertyAccess().getReferenceAssignment_1()); }
(rule__ModelProperty__ReferenceAssignment_1)
{ after(grammarAccess.getModelPropertyAccess().getReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Typeof__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typeof__Group__0__Impl
	rule__Typeof__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeof__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeofAccess().getIstypeofKeyword_0()); }

	'istypeof' 

{ after(grammarAccess.getTypeofAccess().getIstypeofKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typeof__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typeof__Group__1__Impl
	rule__Typeof__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeof__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeofAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTypeofAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typeof__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typeof__Group__2__Impl
	rule__Typeof__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeof__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeofAccess().getReferenceAssignment_2()); }
(rule__Typeof__ReferenceAssignment_2)
{ after(grammarAccess.getTypeofAccess().getReferenceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typeof__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typeof__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeof__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeofAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTypeofAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group__0__Impl
	rule__TypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getContextAssignment_0()); }
(rule__TypeReference__ContextAssignment_0)
{ after(grammarAccess.getTypeReferenceAccess().getContextAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group__1__Impl
	rule__TypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getTypeReferenceAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group__2__Impl
	rule__TypeReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getReferenceAssignment_2()); }
(rule__TypeReference__ReferenceAssignment_2)
{ after(grammarAccess.getTypeReferenceAccess().getReferenceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getCollectionAssignment_3()); }
(rule__TypeReference__CollectionAssignment_3)?
{ after(grammarAccess.getTypeReferenceAccess().getCollectionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup_1()); }
(rule__QualifiedNameWithWildcard__Group_1__0)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__0__Impl
	rule__QualifiedNameWithWildcard__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_1_1()); }

	'*' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__AspectModel__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getAspectModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AspectModel__ImportsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getImportsImportParserRuleCall_2_0()); }
	ruleImport{ after(grammarAccess.getAspectModelAccess().getImportsImportParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AspectModel__SourcesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getSourcesApplicationModelParserRuleCall_3_0()); }
	ruleApplicationModel{ after(grammarAccess.getAspectModelAccess().getSourcesApplicationModelParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AspectModel__AdvicesAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getAdvicesAdviceParserRuleCall_4_0_0()); }
	ruleAdvice{ after(grammarAccess.getAspectModelAccess().getAdvicesAdviceParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AspectModel__PointcutsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getPointcutsPointcutParserRuleCall_4_1_0()); }
	rulePointcut{ after(grammarAccess.getAspectModelAccess().getPointcutsPointcutParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AspectModel__AspectsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getAspectsAspectParserRuleCall_4_2_0()); }
	ruleAspect{ after(grammarAccess.getAspectModelAccess().getAspectsAspectParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__HandlerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getHandlerIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getApplicationModelAccess().getHandlerIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getApplicationModelAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__ModelAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getModelSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getApplicationModelAccess().getModelSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__PointcutAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getPointcutPointcutCrossReference_1_0()); }
(
{ before(grammarAccess.getAspectAccess().getPointcutPointcutQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAspectAccess().getPointcutPointcutQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAspectAccess().getPointcutPointcutCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__AdvicesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getAdvicesUtilizeAdviceParserRuleCall_3_0()); }
	ruleUtilizeAdvice{ after(grammarAccess.getAspectAccess().getAdvicesUtilizeAdviceParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__AdvicesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getAdvicesUtilizeAdviceParserRuleCall_4_1_0()); }
	ruleUtilizeAdvice{ after(grammarAccess.getAspectAccess().getAdvicesUtilizeAdviceParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeAdvice__AdviceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeAdviceAccess().getAdviceAdviceCrossReference_0_0()); }
(
{ before(grammarAccess.getUtilizeAdviceAccess().getAdviceAdviceQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getUtilizeAdviceAccess().getAdviceAdviceQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getUtilizeAdviceAccess().getAdviceAdviceCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeAdvice__ParameterAssignmentsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeAdviceAccess().getParameterAssignmentsValueParserRuleCall_1_1_0_0()); }
	ruleValue{ after(grammarAccess.getUtilizeAdviceAccess().getParameterAssignmentsValueParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeAdvice__ParameterAssignmentsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeAdviceAccess().getParameterAssignmentsValueParserRuleCall_1_1_1_1_0()); }
	ruleValue{ after(grammarAccess.getUtilizeAdviceAccess().getParameterAssignmentsValueParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAdviceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__ParameterDeclarationsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getParameterDeclarationsAdviceParameterDeclarationParserRuleCall_2_1_0_0()); }
	ruleAdviceParameterDeclaration{ after(grammarAccess.getAdviceAccess().getParameterDeclarationsAdviceParameterDeclarationParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__ParameterDeclarationsAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getParameterDeclarationsAdviceParameterDeclarationParserRuleCall_2_1_1_1_0()); }
	ruleAdviceParameterDeclaration{ after(grammarAccess.getAdviceAccess().getParameterDeclarationsAdviceParameterDeclarationParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__CollectorsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getCollectorsCollectorParserRuleCall_4_0()); }
	ruleCollector{ after(grammarAccess.getAdviceAccess().getCollectorsCollectorParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceParameterDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceParameterDeclarationAccess().getTypeTypeReferenceParserRuleCall_0_0()); }
	ruleTypeReference{ after(grammarAccess.getAdviceParameterDeclarationAccess().getTypeTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceParameterDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAdviceParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__InsertionPointAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getInsertionPointInsertionPointEnumRuleCall_0_0()); }
	ruleInsertionPoint{ after(grammarAccess.getCollectorAccess().getInsertionPointInsertionPointEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__EventsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getEventsEventParserRuleCall_1_0()); }
	ruleEvent{ after(grammarAccess.getCollectorAccess().getEventsEventParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getTypeRecordTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getEventAccess().getTypeRecordTypeQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEventAccess().getTypeRecordTypeQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getEventAccess().getTypeRecordTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__InitializationsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getInitializationsValueParserRuleCall_2_0_0()); }
	ruleValue{ after(grammarAccess.getEventAccess().getInitializationsValueParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__InitializationsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getInitializationsValueParserRuleCall_2_1_1_0()); }
	ruleValue{ after(grammarAccess.getEventAccess().getInitializationsValueParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValue__QueryAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceValueAccess().getQueryLocationQueryParserRuleCall_0_0()); }
	ruleLocationQuery{ after(grammarAccess.getReferenceValueAccess().getQueryLocationQueryParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValue__PropertyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceValueAccess().getPropertyPropertyParserRuleCall_1_0()); }
	ruleProperty{ after(grammarAccess.getReferenceValueAccess().getPropertyPropertyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InternalFunctionProperty__FunctionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalFunctionPropertyAccess().getFunctionInternalFunctionEnumRuleCall_0()); }
	ruleInternalFunction{ after(grammarAccess.getInternalFunctionPropertyAccess().getFunctionInternalFunctionEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReflectionProperty__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReflectionPropertyAccess().getFunctionReflectionFunctionEnumRuleCall_1_0()); }
	ruleReflectionFunction{ after(grammarAccess.getReflectionPropertyAccess().getFunctionReflectionFunctionEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceParameter__DeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceParameterAccess().getDeclarationAdviceParameterDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getAdviceParameterAccess().getDeclarationAdviceParameterDeclarationIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAdviceParameterAccess().getDeclarationAdviceParameterDeclarationIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAdviceParameterAccess().getDeclarationAdviceParameterDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceParameter__CollectionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceParameterAccess().getCollectionValueParserRuleCall_1_1_0()); }
	ruleValue{ after(grammarAccess.getAdviceParameterAccess().getCollectionValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__AnnotationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getPointcutAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPointcutAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__ModelAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getModelApplicationModelCrossReference_4_0()); }
(
{ before(grammarAccess.getPointcutAccess().getModelApplicationModelIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getPointcutAccess().getModelApplicationModelIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getPointcutAccess().getModelApplicationModelCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__LocationAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getLocationLocationQueryParserRuleCall_6_0()); }
	ruleLocationQuery{ after(grammarAccess.getPointcutAccess().getLocationLocationQueryParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__OperationAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getOperationOperationQueryParserRuleCall_7_1_0()); }
	ruleOperationQuery{ after(grammarAccess.getPointcutAccess().getOperationOperationQueryParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getNameTechnologyKeyword_1_0()); }
(
{ before(grammarAccess.getAnnotationAccess().getNameTechnologyKeyword_1_0()); }

	'technology' 

{ after(grammarAccess.getAnnotationAccess().getNameTechnologyKeyword_1_0()); }
)

{ after(grammarAccess.getAnnotationAccess().getNameTechnologyKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__TechnologiesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getTechnologiesTechnologyEnumRuleCall_2_0()); }
	ruleTechnology{ after(grammarAccess.getAnnotationAccess().getTechnologiesTechnologyEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__TechnologiesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getTechnologiesTechnologyEnumRuleCall_3_1_0()); }
	ruleTechnology{ after(grammarAccess.getAnnotationAccess().getTechnologiesTechnologyEnumRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__NodeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getNodeNodeParserRuleCall_0_0()); }
	ruleNode{ after(grammarAccess.getLocationQueryAccess().getNodeNodeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__SpecializationAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getSpecializationLocationQueryParserRuleCall_1_0_1_0()); }
	ruleLocationQuery{ after(grammarAccess.getLocationQueryAccess().getSpecializationLocationQueryParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__CompositionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getCompositionCompositionQueryParserRuleCall_1_1_0()); }
	ruleCompositionQuery{ after(grammarAccess.getLocationQueryAccess().getCompositionCompositionQueryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__ModifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getModifierQueryModifierEnumRuleCall_1_0()); }
	ruleQueryModifier{ after(grammarAccess.getCompositionQueryAccess().getModifierQueryModifierEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__SubQueriesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getSubQueriesLocationQueryParserRuleCall_3_0()); }
	ruleLocationQuery{ after(grammarAccess.getCompositionQueryAccess().getSubQueriesLocationQueryParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__ModifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getModifierOperationModifierCrossReference_1_0()); }
(
{ before(grammarAccess.getOperationQueryAccess().getModifierOperationModifierIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getOperationQueryAccess().getModifierOperationModifierIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getOperationQueryAccess().getModifierOperationModifierCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__ReturnTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getReturnTypeTypeReferenceParserRuleCall_2_0()); }
	ruleTypeReference{ after(grammarAccess.getOperationQueryAccess().getReturnTypeTypeReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__OperationReferenceAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getOperationReferenceOperationCrossReference_3_0_0_0()); }
(
{ before(grammarAccess.getOperationQueryAccess().getOperationReferenceOperationIDTerminalRuleCall_3_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getOperationQueryAccess().getOperationReferenceOperationIDTerminalRuleCall_3_0_0_0_1()); }
)
{ after(grammarAccess.getOperationQueryAccess().getOperationReferenceOperationCrossReference_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__ParameterQueriesAssignment_3_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getParameterQueriesParameterQueryParserRuleCall_3_0_1_1_0()); }
	ruleParameterQuery{ after(grammarAccess.getOperationQueryAccess().getParameterQueriesParameterQueryParserRuleCall_3_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationQuery__ParameterQueriesAssignment_3_0_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationQueryAccess().getParameterQueriesParameterQueryParserRuleCall_3_0_1_2_1_0()); }
	ruleParameterQuery{ after(grammarAccess.getOperationQueryAccess().getParameterQueriesParameterQueryParserRuleCall_3_0_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__ModifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getModifierParameterModifierCrossReference_1_0()); }
(
{ before(grammarAccess.getParameterQueryAccess().getModifierParameterModifierIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterQueryAccess().getModifierParameterModifierIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getParameterQueryAccess().getModifierParameterModifierCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__TypeAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getTypeTypeReferenceParserRuleCall_2_0_0()); }
	ruleTypeReference{ after(grammarAccess.getParameterQueryAccess().getTypeTypeReferenceParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__ParameterAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getParameterParameterCrossReference_3_0()); }
(
{ before(grammarAccess.getParameterQueryAccess().getParameterParameterIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterQueryAccess().getParameterParameterIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getParameterQueryAccess().getParameterParameterCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__ConstraintAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getConstraintPropertyConstraintParserRuleCall_1_1_0()); }
	rulePropertyConstraint{ after(grammarAccess.getNodeAccess().getConstraintPropertyConstraintParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerNode__ContainerAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerNodeAccess().getContainerFeatureCrossReference_0()); }
(
{ before(grammarAccess.getContainerNodeAccess().getContainerFeatureIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getContainerNodeAccess().getContainerFeatureIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getContainerNodeAccess().getContainerFeatureCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraint__LogicAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintAccess().getLogicLogicOperatorEnumRuleCall_1_1_0()); }
	ruleLogicOperator{ after(grammarAccess.getPropertyConstraintAccess().getLogicLogicOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraint__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintAccess().getRightPropertyConstraintCompareParserRuleCall_1_2_0()); }
	rulePropertyConstraintCompare{ after(grammarAccess.getPropertyConstraintAccess().getRightPropertyConstraintCompareParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraintCompare__CompareAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintCompareAccess().getCompareCompareOperatorEnumRuleCall_1_1_0()); }
	ruleCompareOperator{ after(grammarAccess.getPropertyConstraintCompareAccess().getCompareCompareOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyConstraintCompare__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyConstraintCompareAccess().getRightConstraintElementParserRuleCall_1_2_0()); }
	ruleConstraintElement{ after(grammarAccess.getPropertyConstraintCompareAccess().getRightConstraintElementParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalQuery__LocationQueryAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalQueryAccess().getLocationQueryLocationQueryParserRuleCall_0_0()); }
	ruleLocationQuery{ after(grammarAccess.getLocalQueryAccess().getLocationQueryLocationQueryParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalQuery__PropertyAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalQueryAccess().getPropertyModelPropertyParserRuleCall_1_0_0()); }
	ruleModelProperty{ after(grammarAccess.getLocalQueryAccess().getPropertyModelPropertyParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalQuery__TypeofAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalQueryAccess().getTypeofTypeofParserRuleCall_1_1_0()); }
	ruleTypeof{ after(grammarAccess.getLocalQueryAccess().getTypeofTypeofParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperty__ReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelPropertyAccess().getReferenceFeatureCrossReference_1_0()); }
(
{ before(grammarAccess.getModelPropertyAccess().getReferenceFeatureIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getModelPropertyAccess().getReferenceFeatureIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getModelPropertyAccess().getReferenceFeatureCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Typeof__ReferenceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeofAccess().getReferenceTypeReferenceParserRuleCall_2_0()); }
	ruleTypeReference{ after(grammarAccess.getTypeofAccess().getReferenceTypeReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_0()); }
	RULE_FLOAT{ after(grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__ContextAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getContextApplicationModelCrossReference_0_0()); }
(
{ before(grammarAccess.getTypeReferenceAccess().getContextApplicationModelIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeReferenceAccess().getContextApplicationModelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTypeReferenceAccess().getContextApplicationModelCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__ReferenceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getReferenceNamedTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getTypeReferenceAccess().getReferenceNamedTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeReferenceAccess().getReferenceNamedTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTypeReferenceAccess().getReferenceNamedTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__CollectionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getCollectionLeftSquareBracketRightSquareBracketKeyword_3_0()); }
(
{ before(grammarAccess.getTypeReferenceAccess().getCollectionLeftSquareBracketRightSquareBracketKeyword_3_0()); }

	'[]' 

{ after(grammarAccess.getTypeReferenceAccess().getCollectionLeftSquareBracketRightSquareBracketKeyword_3_0()); }
)

{ after(grammarAccess.getTypeReferenceAccess().getCollectionLeftSquareBracketRightSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_FLOAT : (RULE_NUMBER+ '.' RULE_NUMBER* (('e'|'E') ('+'|'-')? RULE_NUMBER+)? 'f'?|RULE_NUMBER+ 'f');

fragment RULE_NUMBER : '0'..'9';

RULE_INT : RULE_NUMBER+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


