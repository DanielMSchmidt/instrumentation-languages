/*
 * generated by Xtext
 */
grammar InternalAspectLang;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.cau.cs.se.instrumentation.al.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cau.cs.se.instrumentation.al.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.cau.cs.se.instrumentation.al.services.AspectLangGrammarAccess;

}

@parser::members {
 
 	private AspectLangGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AspectLangGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegisteredPackage
entryRuleRegisteredPackage 
:
{ before(grammarAccess.getRegisteredPackageRule()); }
	 ruleRegisteredPackage
{ after(grammarAccess.getRegisteredPackageRule()); } 
	 EOF 
;

// Rule RegisteredPackage
ruleRegisteredPackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegisteredPackageAccess().getGroup()); }
(rule__RegisteredPackage__Group__0)
{ after(grammarAccess.getRegisteredPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleApplicationModel
entryRuleApplicationModel 
:
{ before(grammarAccess.getApplicationModelRule()); }
	 ruleApplicationModel
{ after(grammarAccess.getApplicationModelRule()); } 
	 EOF 
;

// Rule ApplicationModel
ruleApplicationModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getApplicationModelAccess().getGroup()); }
(rule__ApplicationModel__Group__0)
{ after(grammarAccess.getApplicationModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAspect
entryRuleAspect 
:
{ before(grammarAccess.getAspectRule()); }
	 ruleAspect
{ after(grammarAccess.getAspectRule()); } 
	 EOF 
;

// Rule Aspect
ruleAspect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAspectAccess().getGroup()); }
(rule__Aspect__Group__0)
{ after(grammarAccess.getAspectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUtilizeProbe
entryRuleUtilizeProbe 
:
{ before(grammarAccess.getUtilizeProbeRule()); }
	 ruleUtilizeProbe
{ after(grammarAccess.getUtilizeProbeRule()); } 
	 EOF 
;

// Rule UtilizeProbe
ruleUtilizeProbe
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUtilizeProbeAccess().getGroup()); }
(rule__UtilizeProbe__Group__0)
{ after(grammarAccess.getUtilizeProbeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdvice
entryRuleAdvice 
:
{ before(grammarAccess.getAdviceRule()); }
	 ruleAdvice
{ after(grammarAccess.getAdviceRule()); } 
	 EOF 
;

// Rule Advice
ruleAdvice
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdviceAccess().getGroup()); }
(rule__Advice__Group__0)
{ after(grammarAccess.getAdviceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterDeclaration
entryRuleParameterDeclaration 
:
{ before(grammarAccess.getParameterDeclarationRule()); }
	 ruleParameterDeclaration
{ after(grammarAccess.getParameterDeclarationRule()); } 
	 EOF 
;

// Rule ParameterDeclaration
ruleParameterDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterDeclarationAccess().getGroup()); }
(rule__ParameterDeclaration__Group__0)
{ after(grammarAccess.getParameterDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePointcut
entryRulePointcut 
:
{ before(grammarAccess.getPointcutRule()); }
	 rulePointcut
{ after(grammarAccess.getPointcutRule()); } 
	 EOF 
;

// Rule Pointcut
rulePointcut
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPointcutAccess().getGroup()); }
(rule__Pointcut__Group__0)
{ after(grammarAccess.getPointcutAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodQuery
entryRuleMethodQuery 
:
{ before(grammarAccess.getMethodQueryRule()); }
	 ruleMethodQuery
{ after(grammarAccess.getMethodQueryRule()); } 
	 EOF 
;

// Rule MethodQuery
ruleMethodQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodQueryAccess().getGroup()); }
(rule__MethodQuery__Group__0)
{ after(grammarAccess.getMethodQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterQuery
entryRuleParameterQuery 
:
{ before(grammarAccess.getParameterQueryRule()); }
	 ruleParameterQuery
{ after(grammarAccess.getParameterQueryRule()); } 
	 EOF 
;

// Rule ParameterQuery
ruleParameterQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterQueryAccess().getGroup()); }
(rule__ParameterQuery__Group__0)
{ after(grammarAccess.getParameterQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocationQuery
entryRuleLocationQuery 
:
{ before(grammarAccess.getLocationQueryRule()); }
	 ruleLocationQuery
{ after(grammarAccess.getLocationQueryRule()); } 
	 EOF 
;

// Rule LocationQuery
ruleLocationQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocationQueryAccess().getGroup()); }
(rule__LocationQuery__Group__0)
{ after(grammarAccess.getLocationQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompositionQuery
entryRuleCompositionQuery 
:
{ before(grammarAccess.getCompositionQueryRule()); }
	 ruleCompositionQuery
{ after(grammarAccess.getCompositionQueryRule()); } 
	 EOF 
;

// Rule CompositionQuery
ruleCompositionQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompositionQueryAccess().getGroup()); }
(rule__CompositionQuery__Group__0)
{ after(grammarAccess.getCompositionQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNode
entryRuleNode 
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeAccess().getGroup()); }
(rule__Node__Group__0)
{ after(grammarAccess.getNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParamQuery
entryRuleParamQuery 
:
{ before(grammarAccess.getParamQueryRule()); }
	 ruleParamQuery
{ after(grammarAccess.getParamQueryRule()); } 
	 EOF 
;

// Rule ParamQuery
ruleParamQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamQueryAccess().getGroup()); }
(rule__ParamQuery__Group__0)
{ after(grammarAccess.getParamQueryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParamCompare
entryRuleParamCompare 
:
{ before(grammarAccess.getParamCompareRule()); }
	 ruleParamCompare
{ after(grammarAccess.getParamCompareRule()); } 
	 EOF 
;

// Rule ParamCompare
ruleParamCompare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamCompareAccess().getGroup()); }
(rule__ParamCompare__Group__0)
{ after(grammarAccess.getParamCompareAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatValue
entryRuleFloatValue 
:
{ before(grammarAccess.getFloatValueRule()); }
	 ruleFloatValue
{ after(grammarAccess.getFloatValueRule()); } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatValueAccess().getValueAssignment()); }
(rule__FloatValue__ValueAssignment)
{ after(grammarAccess.getFloatValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValue
entryRuleIntValue 
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueAccess().getValueAssignment()); }
(rule__IntValue__ValueAssignment)
{ after(grammarAccess.getIntValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
(rule__StringValue__ValueAssignment)
{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceValue
entryRuleReferenceValue 
:
{ before(grammarAccess.getReferenceValueRule()); }
	 ruleReferenceValue
{ after(grammarAccess.getReferenceValueRule()); } 
	 EOF 
;

// Rule ReferenceValue
ruleReferenceValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceValueAccess().getGroup()); }
(rule__ReferenceValue__Group__0)
{ after(grammarAccess.getReferenceValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getAlternatives()); }
(rule__Parameter__Alternatives)
{ after(grammarAccess.getParameterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInternalFunctionProperty
entryRuleInternalFunctionProperty 
:
{ before(grammarAccess.getInternalFunctionPropertyRule()); }
	 ruleInternalFunctionProperty
{ after(grammarAccess.getInternalFunctionPropertyRule()); } 
	 EOF 
;

// Rule InternalFunctionProperty
ruleInternalFunctionProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInternalFunctionPropertyAccess().getFunctionAssignment()); }
(rule__InternalFunctionProperty__FunctionAssignment)
{ after(grammarAccess.getInternalFunctionPropertyAccess().getFunctionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuntimeProperty
entryRuleRuntimeProperty 
:
{ before(grammarAccess.getRuntimePropertyRule()); }
	 ruleRuntimeProperty
{ after(grammarAccess.getRuntimePropertyRule()); } 
	 EOF 
;

// Rule RuntimeProperty
ruleRuntimeProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuntimePropertyAccess().getGroup()); }
(rule__RuntimeProperty__Group__0)
{ after(grammarAccess.getRuntimePropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReflectionProperty
entryRuleReflectionProperty 
:
{ before(grammarAccess.getReflectionPropertyRule()); }
	 ruleReflectionProperty
{ after(grammarAccess.getReflectionPropertyRule()); } 
	 EOF 
;

// Rule ReflectionProperty
ruleReflectionProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReflectionPropertyAccess().getGroup()); }
(rule__ReflectionProperty__Group__0)
{ after(grammarAccess.getReflectionPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainerNode
entryRuleContainerNode 
:
{ before(grammarAccess.getContainerNodeRule()); }
	 ruleContainerNode
{ after(grammarAccess.getContainerNodeRule()); } 
	 EOF 
;

// Rule ContainerNode
ruleContainerNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContainerNodeAccess().getContainerAssignment()); }
(rule__ContainerNode__ContainerAssignment)
{ after(grammarAccess.getContainerNodeAccess().getContainerAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWildcardNode
entryRuleWildcardNode 
:
{ before(grammarAccess.getWildcardNodeRule()); }
	 ruleWildcardNode
{ after(grammarAccess.getWildcardNodeRule()); } 
	 EOF 
;

// Rule WildcardNode
ruleWildcardNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWildcardNodeAccess().getGroup()); }
(rule__WildcardNode__Group__0)
{ after(grammarAccess.getWildcardNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubPathNode
entryRuleSubPathNode 
:
{ before(grammarAccess.getSubPathNodeRule()); }
	 ruleSubPathNode
{ after(grammarAccess.getSubPathNodeRule()); } 
	 EOF 
;

// Rule SubPathNode
ruleSubPathNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubPathNodeAccess().getGroup()); }
(rule__SubPathNode__Group__0)
{ after(grammarAccess.getSubPathNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParentNode
entryRuleParentNode 
:
{ before(grammarAccess.getParentNodeRule()); }
	 ruleParentNode
{ after(grammarAccess.getParentNodeRule()); } 
	 EOF 
;

// Rule ParentNode
ruleParentNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParentNodeAccess().getGroup()); }
(rule__ParentNode__Group__0)
{ after(grammarAccess.getParentNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollector
entryRuleCollector 
:
{ before(grammarAccess.getCollectorRule()); }
	 ruleCollector
{ after(grammarAccess.getCollectorRule()); } 
	 EOF 
;

// Rule Collector
ruleCollector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectorAccess().getGroup()); }
(rule__Collector__Group__0)
{ after(grammarAccess.getCollectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getAlternatives()); }
(rule__Annotation__Alternatives)
{ after(grammarAccess.getAnnotationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleCommentAnnotation
entryRuleCommentAnnotation 
:
{ before(grammarAccess.getCommentAnnotationRule()); }
	 ruleCommentAnnotation
{ after(grammarAccess.getCommentAnnotationRule()); } 
	 EOF 
;

// Rule CommentAnnotation
ruleCommentAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAnnotationAccess().getValueAssignment()); }
(rule__CommentAnnotation__ValueAssignment)
{ after(grammarAccess.getCommentAnnotationAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagAnnotation
entryRuleTagAnnotation 
:
{ before(grammarAccess.getTagAnnotationRule()); }
	 ruleTagAnnotation
{ after(grammarAccess.getTagAnnotationRule()); } 
	 EOF 
;

// Rule TagAnnotation
ruleTagAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagAnnotationAccess().getGroup()); }
(rule__TagAnnotation__Group__0)
{ after(grammarAccess.getTagAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyStringValueAnnotation
entryRuleKeyStringValueAnnotation 
:
{ before(grammarAccess.getKeyStringValueAnnotationRule()); }
	 ruleKeyStringValueAnnotation
{ after(grammarAccess.getKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyStringValueAnnotation
ruleKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); }
(rule__KeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedKeyStringValueAnnotation
entryRuleTypedKeyStringValueAnnotation 
:
{ before(grammarAccess.getTypedKeyStringValueAnnotationRule()); }
	 ruleTypedKeyStringValueAnnotation
{ after(grammarAccess.getTypedKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule TypedKeyStringValueAnnotation
ruleTypedKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); }
(rule__TypedKeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyBooleanValueAnnotation
entryRuleKeyBooleanValueAnnotation 
:
{ before(grammarAccess.getKeyBooleanValueAnnotationRule()); }
	 ruleKeyBooleanValueAnnotation
{ after(grammarAccess.getKeyBooleanValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyBooleanValueAnnotation
ruleKeyBooleanValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup()); }
(rule__KeyBooleanValueAnnotation__Group__0)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyIntValueAnnotation
entryRuleKeyIntValueAnnotation 
:
{ before(grammarAccess.getKeyIntValueAnnotationRule()); }
	 ruleKeyIntValueAnnotation
{ after(grammarAccess.getKeyIntValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyIntValueAnnotation
ruleKeyIntValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getGroup()); }
(rule__KeyIntValueAnnotation__Group__0)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyFloatValueAnnotation
entryRuleKeyFloatValueAnnotation 
:
{ before(grammarAccess.getKeyFloatValueAnnotationRule()); }
	 ruleKeyFloatValueAnnotation
{ after(grammarAccess.getKeyFloatValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyFloatValueAnnotation
ruleKeyFloatValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup()); }
(rule__KeyFloatValueAnnotation__Group__0)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtendedID
entryRuleExtendedID 
:
{ before(grammarAccess.getExtendedIDRule()); }
	 ruleExtendedID
{ after(grammarAccess.getExtendedIDRule()); } 
	 EOF 
;

// Rule ExtendedID
ruleExtendedID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup()); }
(rule__ExtendedID__Group__0)
{ after(grammarAccess.getExtendedIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule QueryModifier
ruleQueryModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryModifierAccess().getAlternatives()); }
(rule__QueryModifier__Alternatives)
{ after(grammarAccess.getQueryModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule InternalFunction
ruleInternalFunction
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalFunctionAccess().getAlternatives()); }
(rule__InternalFunction__Alternatives)
{ after(grammarAccess.getInternalFunctionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ReflectionFunction
ruleReflectionFunction
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReflectionFunctionAccess().getAlternatives()); }
(rule__ReflectionFunction__Alternatives)
{ after(grammarAccess.getReflectionFunctionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Operator
ruleOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
(rule__Operator__Alternatives)
{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule InsertionPoint
ruleInsertionPoint
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertionPointAccess().getAlternatives()); }
(rule__InsertionPoint__Alternatives)
{ after(grammarAccess.getInsertionPointAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAdvicesAssignment_5_0()); }
(rule__Model__AdvicesAssignment_5_0)
{ after(grammarAccess.getModelAccess().getAdvicesAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getPointcutsAssignment_5_1()); }
(rule__Model__PointcutsAssignment_5_1)
{ after(grammarAccess.getModelAccess().getPointcutsAssignment_5_1()); }
)

    |(
{ before(grammarAccess.getModelAccess().getAspectsAssignment_5_2()); }
(rule__Model__AspectsAssignment_5_2)
{ after(grammarAccess.getModelAccess().getAspectsAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getModifierAssignment_0_0()); }
(rule__MethodQuery__ModifierAssignment_0_0)
{ after(grammarAccess.getMethodQueryAccess().getModifierAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getMethodQueryAccess().getAsteriskKeyword_0_1()); }

	'*' 

{ after(grammarAccess.getMethodQueryAccess().getAsteriskKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getReturnTypeAssignment_1_0()); }
(rule__MethodQuery__ReturnTypeAssignment_1_0)
{ after(grammarAccess.getMethodQueryAccess().getReturnTypeAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getMethodQueryAccess().getAsteriskKeyword_1_1()); }

	'*' 

{ after(grammarAccess.getMethodQueryAccess().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getModifierAssignment_0_0()); }
(rule__ParameterQuery__ModifierAssignment_0_0)
{ after(grammarAccess.getParameterQueryAccess().getModifierAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getParameterQueryAccess().getAsteriskKeyword_0_1()); }

	'*' 

{ after(grammarAccess.getParameterQueryAccess().getAsteriskKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getGroup_1_0()); }
(rule__LocationQuery__Group_1_0__0)
{ after(grammarAccess.getLocationQueryAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getLocationQueryAccess().getCompositionAssignment_1_1()); }
(rule__LocationQuery__CompositionAssignment_1_1)
{ after(grammarAccess.getLocationQueryAccess().getCompositionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getSubPathNodeParserRuleCall_0_0()); }
	ruleSubPathNode
{ after(grammarAccess.getNodeAccess().getSubPathNodeParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getNodeAccess().getWildcardNodeParserRuleCall_0_1()); }
	ruleWildcardNode
{ after(grammarAccess.getNodeAccess().getWildcardNodeParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getNodeAccess().getParentNodeParserRuleCall_0_2()); }
	ruleParentNode
{ after(grammarAccess.getNodeAccess().getParentNodeParserRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getNodeAccess().getContainerNodeParserRuleCall_0_3()); }
	ruleContainerNode
{ after(grammarAccess.getNodeAccess().getContainerNodeParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getStringValueParserRuleCall_0()); }
	ruleStringValue
{ after(grammarAccess.getValueAccess().getStringValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getIntValueParserRuleCall_1()); }
	ruleIntValue
{ after(grammarAccess.getValueAccess().getIntValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getFloatValueParserRuleCall_2()); }
	ruleFloatValue
{ after(grammarAccess.getValueAccess().getFloatValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getReferenceValueParserRuleCall_3()); }
	ruleReferenceValue
{ after(grammarAccess.getValueAccess().getReferenceValueParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRuntimePropertyParserRuleCall_0()); }
	ruleRuntimeProperty
{ after(grammarAccess.getParameterAccess().getRuntimePropertyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getParameterAccess().getReflectionPropertyParserRuleCall_1()); }
	ruleReflectionProperty
{ after(grammarAccess.getParameterAccess().getReflectionPropertyParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getParameterAccess().getInternalFunctionPropertyParserRuleCall_2()); }
	ruleInternalFunctionProperty
{ after(grammarAccess.getParameterAccess().getInternalFunctionPropertyParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
	ruleCommentAnnotation
{ after(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_1()); }
	ruleTagAnnotation
{ after(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_2()); }
	ruleKeyStringValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_3()); }
	ruleTypedKeyStringValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyBooleanValueAnnotationParserRuleCall_4()); }
	ruleKeyBooleanValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyBooleanValueAnnotationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyIntValueAnnotationParserRuleCall_5()); }
	ruleKeyIntValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyIntValueAnnotationParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyFloatValueAnnotationParserRuleCall_6()); }
	ruleKeyFloatValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyFloatValueAnnotationParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QueryModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryModifierAccess().getINCLUDEEnumLiteralDeclaration_0()); }
(	'include' 
)
{ after(grammarAccess.getQueryModifierAccess().getINCLUDEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getQueryModifierAccess().getEXCLUDEEnumLiteralDeclaration_1()); }
(	'exclude' 
)
{ after(grammarAccess.getQueryModifierAccess().getEXCLUDEEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InternalFunction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalFunctionAccess().getTIMEEnumLiteralDeclaration_0()); }
(	'time' 
)
{ after(grammarAccess.getInternalFunctionAccess().getTIMEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getInternalFunctionAccess().getTRACE_IDEnumLiteralDeclaration_1()); }
(	'traceId' 
)
{ after(grammarAccess.getInternalFunctionAccess().getTRACE_IDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getInternalFunctionAccess().getORDER_INDEXEnumLiteralDeclaration_2()); }
(	'orderIndex' 
)
{ after(grammarAccess.getInternalFunctionAccess().getORDER_INDEXEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReflectionFunction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReflectionFunctionAccess().getNAMEEnumLiteralDeclaration_0()); }
(	'name' 
)
{ after(grammarAccess.getReflectionFunctionAccess().getNAMEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getReflectionFunctionAccess().getSIGNATUREEnumLiteralDeclaration_1()); }
(	'signature' 
)
{ after(grammarAccess.getReflectionFunctionAccess().getSIGNATUREEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getReflectionFunctionAccess().getCLASSEnumLiteralDeclaration_2()); }
(	'class' 
)
{ after(grammarAccess.getReflectionFunctionAccess().getCLASSEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getReflectionFunctionAccess().getRETURN_TYPEEnumLiteralDeclaration_3()); }
(	'return-type' 
)
{ after(grammarAccess.getReflectionFunctionAccess().getRETURN_TYPEEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getEQEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getOperatorAccess().getEQEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLIKEEnumLiteralDeclaration_1()); }
(	'~' 
)
{ after(grammarAccess.getOperatorAccess().getLIKEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getNEEnumLiteralDeclaration_2()); }
(	'!=' 
)
{ after(grammarAccess.getOperatorAccess().getNEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getGREnumLiteralDeclaration_3()); }
(	'>' 
)
{ after(grammarAccess.getOperatorAccess().getGREnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLWEnumLiteralDeclaration_4()); }
(	'<' 
)
{ after(grammarAccess.getOperatorAccess().getLWEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getGEEnumLiteralDeclaration_5()); }
(	'>=' 
)
{ after(grammarAccess.getOperatorAccess().getGEEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLEEnumLiteralDeclaration_6()); }
(	'<=' 
)
{ after(grammarAccess.getOperatorAccess().getLEEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertionPoint__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertionPointAccess().getBEFOREEnumLiteralDeclaration_0()); }
(	'before' 
)
{ after(grammarAccess.getInsertionPointAccess().getBEFOREEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getInsertionPointAccess().getAFTEREnumLiteralDeclaration_1()); }
(	'after' 
)
{ after(grammarAccess.getInsertionPointAccess().getAFTEREnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getModelAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
(rule__Model__NameAssignment_1)
{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelsAssignment_2()); }
(rule__Model__MetamodelsAssignment_2)*
{ after(grammarAccess.getModelAccess().getMetamodelsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_3()); }
(rule__Model__ImportsAssignment_3)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSourcesAssignment_4()); }
(rule__Model__SourcesAssignment_4)*
{ after(grammarAccess.getModelAccess().getSourcesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAlternatives_5()); }
(rule__Model__Alternatives_5)*
{ after(grammarAccess.getModelAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegisteredPackage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisteredPackage__Group__0__Impl
	rule__RegisteredPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getRegisterKeyword_0()); }

	'register' 

{ after(grammarAccess.getRegisteredPackageAccess().getRegisterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisteredPackage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisteredPackage__Group__1__Impl
	rule__RegisteredPackage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getNameAssignment_1()); }
(rule__RegisteredPackage__NameAssignment_1)
{ after(grammarAccess.getRegisteredPackageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisteredPackage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisteredPackage__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getEPackageAssignment_2()); }
(rule__RegisteredPackage__EPackageAssignment_2)
{ after(grammarAccess.getRegisteredPackageAccess().getEPackageAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ApplicationModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationModel__Group__0__Impl
	rule__ApplicationModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getUseKeyword_0()); }

	'use' 

{ after(grammarAccess.getApplicationModelAccess().getUseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationModel__Group__1__Impl
	rule__ApplicationModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getUsePackagesAssignment_1()); }
(rule__ApplicationModel__UsePackagesAssignment_1)
{ after(grammarAccess.getApplicationModelAccess().getUsePackagesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationModel__Group__2__Impl
	rule__ApplicationModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getGroup_2()); }
(rule__ApplicationModel__Group_2__0)*
{ after(grammarAccess.getApplicationModelAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationModel__Group__3__Impl
	rule__ApplicationModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getOnKeyword_3()); }

	'on' 

{ after(grammarAccess.getApplicationModelAccess().getOnKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationModel__Group__4__Impl
	rule__ApplicationModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getNameAssignment_4()); }
(rule__ApplicationModel__NameAssignment_4)
{ after(grammarAccess.getApplicationModelAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getModelAssignment_5()); }
(rule__ApplicationModel__ModelAssignment_5)
{ after(grammarAccess.getApplicationModelAccess().getModelAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ApplicationModel__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationModel__Group_2__0__Impl
	rule__ApplicationModel__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getApplicationModelAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationModel__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationModel__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getUsePackagesAssignment_2_1()); }
(rule__ApplicationModel__UsePackagesAssignment_2_1)
{ after(grammarAccess.getApplicationModelAccess().getUsePackagesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup_1()); }
(rule__QualifiedNameWithWildcard__Group_1__0)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__0__Impl
	rule__QualifiedNameWithWildcard__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_1_1()); }

	'*' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Aspect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group__0__Impl
	rule__Aspect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getAspectKeyword_0()); }

	'aspect' 

{ after(grammarAccess.getAspectAccess().getAspectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aspect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group__1__Impl
	rule__Aspect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getQueryAssignment_1()); }
(rule__Aspect__QueryAssignment_1)
{ after(grammarAccess.getAspectAccess().getQueryAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aspect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group__2__Impl
	rule__Aspect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getAspectAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aspect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group__3__Impl
	rule__Aspect__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getApplyProbesAssignment_3()); }
(rule__Aspect__ApplyProbesAssignment_3)
{ after(grammarAccess.getAspectAccess().getApplyProbesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aspect__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getGroup_4()); }
(rule__Aspect__Group_4__0)*
{ after(grammarAccess.getAspectAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Aspect__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group_4__0__Impl
	rule__Aspect__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getAspectAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aspect__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aspect__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getApplyProbesAssignment_4_1()); }
(rule__Aspect__ApplyProbesAssignment_4_1)
{ after(grammarAccess.getAspectAccess().getApplyProbesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UtilizeProbe__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeProbe__Group__0__Impl
	rule__UtilizeProbe__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeProbe__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeProbeAccess().getProbeAssignment_0()); }
(rule__UtilizeProbe__ProbeAssignment_0)
{ after(grammarAccess.getUtilizeProbeAccess().getProbeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UtilizeProbe__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeProbe__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeProbe__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeProbeAccess().getGroup_1()); }
(rule__UtilizeProbe__Group_1__0)?
{ after(grammarAccess.getUtilizeProbeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UtilizeProbe__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeProbe__Group_1__0__Impl
	rule__UtilizeProbe__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeProbe__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeProbeAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getUtilizeProbeAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UtilizeProbe__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeProbe__Group_1__1__Impl
	rule__UtilizeProbe__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeProbe__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeProbeAccess().getGroup_1_1()); }
(rule__UtilizeProbe__Group_1_1__0)?
{ after(grammarAccess.getUtilizeProbeAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UtilizeProbe__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeProbe__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeProbe__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeProbeAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getUtilizeProbeAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UtilizeProbe__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeProbe__Group_1_1__0__Impl
	rule__UtilizeProbe__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeProbe__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeProbeAccess().getParameterAssignmentsAssignment_1_1_0()); }
(rule__UtilizeProbe__ParameterAssignmentsAssignment_1_1_0)
{ after(grammarAccess.getUtilizeProbeAccess().getParameterAssignmentsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UtilizeProbe__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeProbe__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeProbe__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeProbeAccess().getGroup_1_1_1()); }
(rule__UtilizeProbe__Group_1_1_1__0)*
{ after(grammarAccess.getUtilizeProbeAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UtilizeProbe__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeProbe__Group_1_1_1__0__Impl
	rule__UtilizeProbe__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeProbe__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeProbeAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getUtilizeProbeAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UtilizeProbe__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UtilizeProbe__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeProbe__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeProbeAccess().getParameterAssignmentsAssignment_1_1_1_1()); }
(rule__UtilizeProbe__ParameterAssignmentsAssignment_1_1_1_1)
{ after(grammarAccess.getUtilizeProbeAccess().getParameterAssignmentsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Advice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__0__Impl
	rule__Advice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getProbeKeyword_0()); }

	'probe' 

{ after(grammarAccess.getAdviceAccess().getProbeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__1__Impl
	rule__Advice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getNameAssignment_1()); }
(rule__Advice__NameAssignment_1)
{ after(grammarAccess.getAdviceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__2__Impl
	rule__Advice__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getGroup_2()); }
(rule__Advice__Group_2__0)?
{ after(grammarAccess.getAdviceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__3__Impl
	rule__Advice__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getAdviceAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__4__Impl
	rule__Advice__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getCollectorsAssignment_4()); }
(rule__Advice__CollectorsAssignment_4)*
{ after(grammarAccess.getAdviceAccess().getCollectorsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getAdviceAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Advice__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2__0__Impl
	rule__Advice__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAdviceAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2__1__Impl
	rule__Advice__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getGroup_2_1()); }
(rule__Advice__Group_2_1__0)?
{ after(grammarAccess.getAdviceAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getAdviceAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Advice__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2_1__0__Impl
	rule__Advice__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getParameterDeclarationsAssignment_2_1_0()); }
(rule__Advice__ParameterDeclarationsAssignment_2_1_0)
{ after(grammarAccess.getAdviceAccess().getParameterDeclarationsAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getGroup_2_1_1()); }
(rule__Advice__Group_2_1_1__0)*
{ after(grammarAccess.getAdviceAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Advice__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2_1_1__0__Impl
	rule__Advice__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getCommaKeyword_2_1_1_0()); }

	',' 

{ after(grammarAccess.getAdviceAccess().getCommaKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getParameterDeclarationsAssignment_2_1_1_1()); }
(rule__Advice__ParameterDeclarationsAssignment_2_1_1_1)
{ after(grammarAccess.getAdviceAccess().getParameterDeclarationsAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__0__Impl
	rule__ParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0()); }
(rule__ParameterDeclaration__TypeAssignment_0)
{ after(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1()); }
(rule__ParameterDeclaration__NameAssignment_1)
{ after(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pointcut__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group__0__Impl
	rule__Pointcut__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getAnnotationAssignment_0()); }
(rule__Pointcut__AnnotationAssignment_0)?
{ after(grammarAccess.getPointcutAccess().getAnnotationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group__1__Impl
	rule__Pointcut__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getPointcutKeyword_1()); }

	'pointcut' 

{ after(grammarAccess.getPointcutAccess().getPointcutKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group__2__Impl
	rule__Pointcut__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getNameAssignment_2()); }
(rule__Pointcut__NameAssignment_2)
{ after(grammarAccess.getPointcutAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group__3__Impl
	rule__Pointcut__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getLocationAssignment_3()); }
(rule__Pointcut__LocationAssignment_3)
{ after(grammarAccess.getPointcutAccess().getLocationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getMethodAssignment_4()); }
(rule__Pointcut__MethodAssignment_4)?
{ after(grammarAccess.getPointcutAccess().getMethodAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodQuery__Group__0__Impl
	rule__MethodQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getAlternatives_0()); }
(rule__MethodQuery__Alternatives_0)
{ after(grammarAccess.getMethodQueryAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodQuery__Group__1__Impl
	rule__MethodQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getAlternatives_1()); }
(rule__MethodQuery__Alternatives_1)
{ after(grammarAccess.getMethodQueryAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodQuery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodQuery__Group__2__Impl
	rule__MethodQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getMethodReferenceAssignment_2()); }
(rule__MethodQuery__MethodReferenceAssignment_2)
{ after(grammarAccess.getMethodQueryAccess().getMethodReferenceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodQuery__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodQuery__Group__3__Impl
	rule__MethodQuery__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getMethodQueryAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodQuery__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodQuery__Group__4__Impl
	rule__MethodQuery__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getParameterQueriesAssignment_4()); }
(rule__MethodQuery__ParameterQueriesAssignment_4)
{ after(grammarAccess.getMethodQueryAccess().getParameterQueriesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodQuery__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodQuery__Group__5__Impl
	rule__MethodQuery__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getGroup_5()); }
(rule__MethodQuery__Group_5__0)*
{ after(grammarAccess.getMethodQueryAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodQuery__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodQuery__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getMethodQueryAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__MethodQuery__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodQuery__Group_5__0__Impl
	rule__MethodQuery__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getMethodQueryAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodQuery__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodQuery__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getParameterQueriesAssignment_5_1()); }
(rule__MethodQuery__ParameterQueriesAssignment_5_1)
{ after(grammarAccess.getMethodQueryAccess().getParameterQueriesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterQuery__Group__0__Impl
	rule__ParameterQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getAlternatives_0()); }
(rule__ParameterQuery__Alternatives_0)
{ after(grammarAccess.getParameterQueryAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterQuery__Group__1__Impl
	rule__ParameterQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getTypeAssignment_1()); }
(rule__ParameterQuery__TypeAssignment_1)
{ after(grammarAccess.getParameterQueryAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterQuery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterQuery__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getParameterAssignment_2()); }
(rule__ParameterQuery__ParameterAssignment_2)
{ after(grammarAccess.getParameterQueryAccess().getParameterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LocationQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocationQuery__Group__0__Impl
	rule__LocationQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getNodeAssignment_0()); }
(rule__LocationQuery__NodeAssignment_0)
{ after(grammarAccess.getLocationQueryAccess().getNodeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocationQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocationQuery__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getAlternatives_1()); }
(rule__LocationQuery__Alternatives_1)?
{ after(grammarAccess.getLocationQueryAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocationQuery__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocationQuery__Group_1_0__0__Impl
	rule__LocationQuery__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getFullStopKeyword_1_0_0()); }

	'.' 

{ after(grammarAccess.getLocationQueryAccess().getFullStopKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocationQuery__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocationQuery__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getSpecializationAssignment_1_0_1()); }
(rule__LocationQuery__SpecializationAssignment_1_0_1)
{ after(grammarAccess.getLocationQueryAccess().getSpecializationAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompositionQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositionQuery__Group__0__Impl
	rule__CompositionQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getCompositionQueryAction_0()); }
(

)
{ after(grammarAccess.getCompositionQueryAccess().getCompositionQueryAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositionQuery__Group__1__Impl
	rule__CompositionQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getModifierAssignment_1()); }
(rule__CompositionQuery__ModifierAssignment_1)?
{ after(grammarAccess.getCompositionQueryAccess().getModifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionQuery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositionQuery__Group__2__Impl
	rule__CompositionQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getCompositionQueryAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionQuery__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositionQuery__Group__3__Impl
	rule__CompositionQuery__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getSubQueriesAssignment_3()); }
(rule__CompositionQuery__SubQueriesAssignment_3)*
{ after(grammarAccess.getCompositionQueryAccess().getSubQueriesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositionQuery__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositionQuery__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getCompositionQueryAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Node__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__0__Impl
	rule__Node__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getAlternatives_0()); }
(rule__Node__Alternatives_0)
{ after(grammarAccess.getNodeAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getParameterAssignment_1()); }
(rule__Node__ParameterAssignment_1)?
{ after(grammarAccess.getNodeAccess().getParameterAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParamQuery__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamQuery__Group__0__Impl
	rule__ParamQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamQuery__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamQueryAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getParamQueryAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamQuery__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamQuery__Group__1__Impl
	rule__ParamQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamQuery__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getParamQueryAccess().getQueriesAssignment_1()); }
(rule__ParamQuery__QueriesAssignment_1)
{ after(grammarAccess.getParamQueryAccess().getQueriesAssignment_1()); }
)
(
{ before(grammarAccess.getParamQueryAccess().getQueriesAssignment_1()); }
(rule__ParamQuery__QueriesAssignment_1)*
{ after(grammarAccess.getParamQueryAccess().getQueriesAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamQuery__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamQuery__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamQuery__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamQueryAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getParamQueryAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParamCompare__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCompare__Group__0__Impl
	rule__ParamCompare__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCompare__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCompareAccess().getLeftAssignment_0()); }
(rule__ParamCompare__LeftAssignment_0)
{ after(grammarAccess.getParamCompareAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCompare__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCompare__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCompare__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCompareAccess().getGroup_1()); }
(rule__ParamCompare__Group_1__0)
{ after(grammarAccess.getParamCompareAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParamCompare__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCompare__Group_1__0__Impl
	rule__ParamCompare__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCompare__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCompareAccess().getOperatorAssignment_1_0()); }
(rule__ParamCompare__OperatorAssignment_1_0)
{ after(grammarAccess.getParamCompareAccess().getOperatorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCompare__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamCompare__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCompare__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCompareAccess().getRightAssignment_1_1()); }
(rule__ParamCompare__RightAssignment_1_1)
{ after(grammarAccess.getParamCompareAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceValue__Group__0__Impl
	rule__ReferenceValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceValueAccess().getQueryAssignment_0()); }
(rule__ReferenceValue__QueryAssignment_0)?
{ after(grammarAccess.getReferenceValueAccess().getQueryAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceValueAccess().getParameterAssignment_1()); }
(rule__ReferenceValue__ParameterAssignment_1)
{ after(grammarAccess.getReferenceValueAccess().getParameterAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuntimeProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuntimeProperty__Group__0__Impl
	rule__RuntimeProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimePropertyAccess().getNumberSignKeyword_0()); }

	'#' 

{ after(grammarAccess.getRuntimePropertyAccess().getNumberSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuntimeProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuntimeProperty__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimePropertyAccess().getReferenceAssignment_1()); }
(rule__RuntimeProperty__ReferenceAssignment_1)
{ after(grammarAccess.getRuntimePropertyAccess().getReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReflectionProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReflectionProperty__Group__0__Impl
	rule__ReflectionProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReflectionProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReflectionPropertyAccess().getDollarSignKeyword_0()); }

	'$' 

{ after(grammarAccess.getReflectionPropertyAccess().getDollarSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReflectionProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReflectionProperty__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReflectionProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReflectionPropertyAccess().getFunctionAssignment_1()); }
(rule__ReflectionProperty__FunctionAssignment_1)
{ after(grammarAccess.getReflectionPropertyAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WildcardNode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WildcardNode__Group__0__Impl
	rule__WildcardNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardNode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNodeAccess().getWildcardNodeAction_0()); }
(

)
{ after(grammarAccess.getWildcardNodeAccess().getWildcardNodeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WildcardNode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WildcardNode__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardNode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNodeAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getWildcardNodeAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubPathNode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubPathNode__Group__0__Impl
	rule__SubPathNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPathNode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubPathNodeAccess().getSubPathNodeAction_0()); }
(

)
{ after(grammarAccess.getSubPathNodeAccess().getSubPathNodeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubPathNode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubPathNode__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPathNode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubPathNodeAccess().getAsteriskAsteriskKeyword_1()); }

	'**' 

{ after(grammarAccess.getSubPathNodeAccess().getAsteriskAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParentNode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParentNode__Group__0__Impl
	rule__ParentNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParentNode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentNodeAccess().getParentNodeAction_0()); }
(

)
{ after(grammarAccess.getParentNodeAccess().getParentNodeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParentNode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParentNode__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParentNode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentNodeAccess().getLessThanSignLessThanSignKeyword_1()); }

	'<<' 

{ after(grammarAccess.getParentNodeAccess().getLessThanSignLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Collector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Collector__Group__0__Impl
	rule__Collector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getInsertionPointAssignment_0()); }
(rule__Collector__InsertionPointAssignment_0)
{ after(grammarAccess.getCollectorAccess().getInsertionPointAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Collector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Collector__Group__1__Impl
	rule__Collector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getTypeAssignment_1()); }
(rule__Collector__TypeAssignment_1)
{ after(grammarAccess.getCollectorAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Collector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Collector__Group__2__Impl
	rule__Collector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getCollectorAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Collector__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Collector__Group__3__Impl
	rule__Collector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getGroup_3()); }
(rule__Collector__Group_3__0)?
{ after(grammarAccess.getCollectorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Collector__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Collector__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getCollectorAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Collector__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Collector__Group_3__0__Impl
	rule__Collector__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getInitializationsAssignment_3_0()); }
(rule__Collector__InitializationsAssignment_3_0)
{ after(grammarAccess.getCollectorAccess().getInitializationsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Collector__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Collector__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getGroup_3_1()); }
(rule__Collector__Group_3_1__0)*
{ after(grammarAccess.getCollectorAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Collector__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Collector__Group_3_1__0__Impl
	rule__Collector__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getCollectorAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Collector__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Collector__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getInitializationsAssignment_3_1_1()); }
(rule__Collector__InitializationsAssignment_3_1_1)
{ after(grammarAccess.getCollectorAccess().getInitializationsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TagAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__0__Impl
	rule__TagAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__1__Impl
	rule__TagAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); }
(rule__TagAnnotation__NameAssignment_1)
{ after(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getGroup_2()); }
(rule__TagAnnotation__Group_2__0)?
{ after(grammarAccess.getTagAnnotationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TagAnnotation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group_2__0__Impl
	rule__TagAnnotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getTagAnnotationAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group_2__1__Impl
	rule__TagAnnotation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getAnnotationsAssignment_2_1()); }
(rule__TagAnnotation__AnnotationsAssignment_2_1)*
{ after(grammarAccess.getTagAnnotationAccess().getAnnotationsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getTagAnnotationAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__0__Impl
	rule__KeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__1__Impl
	rule__KeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__2__Impl
	rule__KeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyStringValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); }
(rule__KeyStringValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyStringValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__0__Impl
	rule__KeyStringValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__1__Impl
	rule__KeyStringValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyStringValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypedKeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__0__Impl
	rule__TypedKeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__1__Impl
	rule__TypedKeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__TypedKeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__2__Impl
	rule__TypedKeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__3__Impl
	rule__TypedKeyStringValueAnnotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
(rule__TypedKeyStringValueAnnotation__TypeAssignment_3)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__4__Impl
	rule__TypedKeyStringValueAnnotation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__5__Impl
	rule__TypedKeyStringValueAnnotation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueAssignment_5()); }
(rule__TypedKeyStringValueAnnotation__ValueAssignment_5)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); }
(rule__TypedKeyStringValueAnnotation__Group_6__0)?
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TypedKeyStringValueAnnotation__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__0__Impl
	rule__TypedKeyStringValueAnnotation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_6_0()); }

	'(' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__1__Impl
	rule__TypedKeyStringValueAnnotation__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAssignment_6_1()); }
(rule__TypedKeyStringValueAnnotation__AnnotationsAssignment_6_1)*
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightParenthesisKeyword_6_2()); }

	')' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightParenthesisKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyBooleanValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__0__Impl
	rule__KeyBooleanValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__1__Impl
	rule__KeyBooleanValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyBooleanValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__2__Impl
	rule__KeyBooleanValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyBooleanValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup_3()); }
(rule__KeyBooleanValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyBooleanValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group_3__0__Impl
	rule__KeyBooleanValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group_3__1__Impl
	rule__KeyBooleanValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyBooleanValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyIntValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__0__Impl
	rule__KeyIntValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyIntValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__1__Impl
	rule__KeyIntValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyIntValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__2__Impl
	rule__KeyIntValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyIntValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getGroup_3()); }
(rule__KeyIntValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyIntValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group_3__0__Impl
	rule__KeyIntValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyIntValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group_3__1__Impl
	rule__KeyIntValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyIntValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyIntValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyFloatValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__0__Impl
	rule__KeyFloatValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__1__Impl
	rule__KeyFloatValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyFloatValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__2__Impl
	rule__KeyFloatValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyFloatValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup_3()); }
(rule__KeyFloatValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyFloatValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group_3__0__Impl
	rule__KeyFloatValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group_3__1__Impl
	rule__KeyFloatValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyFloatValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__ExtendedID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__0__Impl
	rule__ExtendedID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup_1()); }
(rule__ExtendedID__Group_1__0)*
{ after(grammarAccess.getExtendedIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExtendedID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__0__Impl
	rule__ExtendedID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MetamodelsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelsRegisteredPackageParserRuleCall_2_0()); }
	ruleRegisteredPackage{ after(grammarAccess.getModelAccess().getMetamodelsRegisteredPackageParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_3_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SourcesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSourcesApplicationModelParserRuleCall_4_0()); }
	ruleApplicationModel{ after(grammarAccess.getModelAccess().getSourcesApplicationModelParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__AdvicesAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAdvicesAdviceParserRuleCall_5_0_0()); }
	ruleAdvice{ after(grammarAccess.getModelAccess().getAdvicesAdviceParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PointcutsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPointcutsPointcutParserRuleCall_5_1_0()); }
	rulePointcut{ after(grammarAccess.getModelAccess().getPointcutsPointcutParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__AspectsAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAspectsAspectParserRuleCall_5_2_0()); }
	ruleAspect{ after(grammarAccess.getModelAccess().getAspectsAspectParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRegisteredPackageAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__EPackageAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getEPackageEPackageCrossReference_2_0()); }
(
{ before(grammarAccess.getRegisteredPackageAccess().getEPackageEPackageSTRINGTerminalRuleCall_2_0_1()); }
	RULE_STRING{ after(grammarAccess.getRegisteredPackageAccess().getEPackageEPackageSTRINGTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRegisteredPackageAccess().getEPackageEPackageCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__UsePackagesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getUsePackagesRegisteredPackageCrossReference_1_0()); }
(
{ before(grammarAccess.getApplicationModelAccess().getUsePackagesRegisteredPackageIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getApplicationModelAccess().getUsePackagesRegisteredPackageIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getApplicationModelAccess().getUsePackagesRegisteredPackageCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__UsePackagesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getUsePackagesRegisteredPackageCrossReference_2_1_0()); }
(
{ before(grammarAccess.getApplicationModelAccess().getUsePackagesRegisteredPackageIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getApplicationModelAccess().getUsePackagesRegisteredPackageIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getApplicationModelAccess().getUsePackagesRegisteredPackageCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getApplicationModelAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationModel__ModelAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationModelAccess().getModelSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getApplicationModelAccess().getModelSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__QueryAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getQueryPointcutCrossReference_1_0()); }
(
{ before(grammarAccess.getAspectAccess().getQueryPointcutQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAspectAccess().getQueryPointcutQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAspectAccess().getQueryPointcutCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__ApplyProbesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getApplyProbesUtilizeProbeParserRuleCall_3_0()); }
	ruleUtilizeProbe{ after(grammarAccess.getAspectAccess().getApplyProbesUtilizeProbeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aspect__ApplyProbesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getApplyProbesUtilizeProbeParserRuleCall_4_1_0()); }
	ruleUtilizeProbe{ after(grammarAccess.getAspectAccess().getApplyProbesUtilizeProbeParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeProbe__ProbeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeProbeAccess().getProbeAdviceCrossReference_0_0()); }
(
{ before(grammarAccess.getUtilizeProbeAccess().getProbeAdviceQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getUtilizeProbeAccess().getProbeAdviceQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getUtilizeProbeAccess().getProbeAdviceCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeProbe__ParameterAssignmentsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeProbeAccess().getParameterAssignmentsValueParserRuleCall_1_1_0_0()); }
	ruleValue{ after(grammarAccess.getUtilizeProbeAccess().getParameterAssignmentsValueParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UtilizeProbe__ParameterAssignmentsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUtilizeProbeAccess().getParameterAssignmentsValueParserRuleCall_1_1_1_1_0()); }
	ruleValue{ after(grammarAccess.getUtilizeProbeAccess().getParameterAssignmentsValueParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAdviceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__ParameterDeclarationsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getParameterDeclarationsParameterDeclarationParserRuleCall_2_1_0_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getAdviceAccess().getParameterDeclarationsParameterDeclarationParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__ParameterDeclarationsAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getParameterDeclarationsParameterDeclarationParserRuleCall_2_1_1_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getAdviceAccess().getParameterDeclarationsParameterDeclarationParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__CollectorsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getCollectorsCollectorParserRuleCall_4_0()); }
	ruleCollector{ after(grammarAccess.getAdviceAccess().getCollectorsCollectorParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getTypeTypeKeyword_0_0()); }
(
{ before(grammarAccess.getParameterDeclarationAccess().getTypeTypeKeyword_0_0()); }

	'type' 

{ after(grammarAccess.getParameterDeclarationAccess().getTypeTypeKeyword_0_0()); }
)

{ after(grammarAccess.getParameterDeclarationAccess().getTypeTypeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__AnnotationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getPointcutAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPointcutAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__LocationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getLocationLocationQueryParserRuleCall_3_0()); }
	ruleLocationQuery{ after(grammarAccess.getPointcutAccess().getLocationLocationQueryParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__MethodAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcutAccess().getMethodMethodQueryParserRuleCall_4_0()); }
	ruleMethodQuery{ after(grammarAccess.getPointcutAccess().getMethodMethodQueryParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__ModifierAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getModifierMethodModifierCrossReference_0_0_0()); }
(
{ before(grammarAccess.getMethodQueryAccess().getModifierMethodModifierIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodQueryAccess().getModifierMethodModifierIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getMethodQueryAccess().getModifierMethodModifierCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__ReturnTypeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getReturnTypeTypeCrossReference_1_0_0()); }
(
{ before(grammarAccess.getMethodQueryAccess().getReturnTypeTypeIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodQueryAccess().getReturnTypeTypeIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getMethodQueryAccess().getReturnTypeTypeCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__MethodReferenceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getMethodReferenceMethodCrossReference_2_0()); }
(
{ before(grammarAccess.getMethodQueryAccess().getMethodReferenceMethodIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodQueryAccess().getMethodReferenceMethodIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getMethodQueryAccess().getMethodReferenceMethodCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__ParameterQueriesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getParameterQueriesParameterQueryParserRuleCall_4_0()); }
	ruleParameterQuery{ after(grammarAccess.getMethodQueryAccess().getParameterQueriesParameterQueryParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodQuery__ParameterQueriesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodQueryAccess().getParameterQueriesParameterQueryParserRuleCall_5_1_0()); }
	ruleParameterQuery{ after(grammarAccess.getMethodQueryAccess().getParameterQueriesParameterQueryParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__ModifierAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getModifierParameterModifierCrossReference_0_0_0()); }
(
{ before(grammarAccess.getParameterQueryAccess().getModifierParameterModifierIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterQueryAccess().getModifierParameterModifierIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getParameterQueryAccess().getModifierParameterModifierCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getTypeTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getParameterQueryAccess().getTypeTypeIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterQueryAccess().getTypeTypeIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getParameterQueryAccess().getTypeTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQuery__ParameterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQueryAccess().getParameterParameterCrossReference_2_0()); }
(
{ before(grammarAccess.getParameterQueryAccess().getParameterParameterIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterQueryAccess().getParameterParameterIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getParameterQueryAccess().getParameterParameterCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__NodeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getNodeNodeParserRuleCall_0_0()); }
	ruleNode{ after(grammarAccess.getLocationQueryAccess().getNodeNodeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__SpecializationAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getSpecializationLocationQueryParserRuleCall_1_0_1_0()); }
	ruleLocationQuery{ after(grammarAccess.getLocationQueryAccess().getSpecializationLocationQueryParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocationQuery__CompositionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocationQueryAccess().getCompositionCompositionQueryParserRuleCall_1_1_0()); }
	ruleCompositionQuery{ after(grammarAccess.getLocationQueryAccess().getCompositionCompositionQueryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__ModifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getModifierQueryModifierEnumRuleCall_1_0()); }
	ruleQueryModifier{ after(grammarAccess.getCompositionQueryAccess().getModifierQueryModifierEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionQuery__SubQueriesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionQueryAccess().getSubQueriesLocationQueryParserRuleCall_3_0()); }
	ruleLocationQuery{ after(grammarAccess.getCompositionQueryAccess().getSubQueriesLocationQueryParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__ParameterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getParameterParamQueryParserRuleCall_1_0()); }
	ruleParamQuery{ after(grammarAccess.getNodeAccess().getParameterParamQueryParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamQuery__QueriesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamQueryAccess().getQueriesParamCompareParserRuleCall_1_0()); }
	ruleParamCompare{ after(grammarAccess.getParamQueryAccess().getQueriesParamCompareParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCompare__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCompareAccess().getLeftValueParserRuleCall_0_0()); }
	ruleValue{ after(grammarAccess.getParamCompareAccess().getLeftValueParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCompare__OperatorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCompareAccess().getOperatorOperatorEnumRuleCall_1_0_0()); }
	ruleOperator{ after(grammarAccess.getParamCompareAccess().getOperatorOperatorEnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCompare__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamCompareAccess().getRightValueParserRuleCall_1_1_0()); }
	ruleValue{ after(grammarAccess.getParamCompareAccess().getRightValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); }
	RULE_FLOAT{ after(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValue__QueryAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceValueAccess().getQueryLocationQueryParserRuleCall_0_0()); }
	ruleLocationQuery{ after(grammarAccess.getReferenceValueAccess().getQueryLocationQueryParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceValue__ParameterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceValueAccess().getParameterParameterParserRuleCall_1_0()); }
	ruleParameter{ after(grammarAccess.getReferenceValueAccess().getParameterParameterParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InternalFunctionProperty__FunctionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalFunctionPropertyAccess().getFunctionInternalFunctionEnumRuleCall_0()); }
	ruleInternalFunction{ after(grammarAccess.getInternalFunctionPropertyAccess().getFunctionInternalFunctionEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuntimeProperty__ReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuntimePropertyAccess().getReferenceIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRuntimePropertyAccess().getReferenceIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReflectionProperty__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReflectionPropertyAccess().getFunctionReflectionFunctionEnumRuleCall_1_0()); }
	ruleReflectionFunction{ after(grammarAccess.getReflectionPropertyAccess().getFunctionReflectionFunctionEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerNode__ContainerAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerNodeAccess().getContainerContainerCrossReference_0()); }
(
{ before(grammarAccess.getContainerNodeAccess().getContainerContainerIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getContainerNodeAccess().getContainerContainerIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getContainerNodeAccess().getContainerContainerCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__InsertionPointAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getInsertionPointInsertionPointEnumRuleCall_0_0()); }
	ruleInsertionPoint{ after(grammarAccess.getCollectorAccess().getInsertionPointInsertionPointEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getTypeRecordTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getCollectorAccess().getTypeRecordTypeQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getCollectorAccess().getTypeRecordTypeQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getCollectorAccess().getTypeRecordTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__InitializationsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getInitializationsValueParserRuleCall_3_0_0()); }
	ruleValue{ after(grammarAccess.getCollectorAccess().getInitializationsValueParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Collector__InitializationsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectorAccess().getInitializationsValueParserRuleCall_3_1_1_0()); }
	ruleValue{ after(grammarAccess.getCollectorAccess().getInitializationsValueParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommentAnnotation__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAnnotationAccess().getValueCOMMENT_ANNOTATIONTerminalRuleCall_0()); }
	RULE_COMMENT_ANNOTATION{ after(grammarAccess.getCommentAnnotationAccess().getValueCOMMENT_ANNOTATIONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__AnnotationsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getAnnotationsAnnotationParserRuleCall_2_1_0()); }
	ruleAnnotation{ after(grammarAccess.getTagAnnotationAccess().getAnnotationsAnnotationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
	ruleExtendedID{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_5_0()); }
	ruleEString{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__AnnotationsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_6_1_0()); }
	ruleAnnotation{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueBOOLEANTerminalRuleCall_2_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueBOOLEANTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyIntValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getValueINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getKeyIntValueAnnotationAccess().getValueINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getValueFLOATTerminalRuleCall_2_0()); }
	RULE_FLOAT{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getValueFLOATTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



RULE_COMMENT_ANNOTATION : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

fragment RULE_NUMBER : '0'..'9';

RULE_INT : '-'? RULE_NUMBER+;

RULE_FLOAT : ('-'? RULE_NUMBER+ '.' RULE_NUMBER* (('e'|'E') ('+'|'-')? RULE_NUMBER+)? 'f'?|'-'? RULE_NUMBER+ 'f');

RULE_BOOLEAN : ('true'|'false');

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


