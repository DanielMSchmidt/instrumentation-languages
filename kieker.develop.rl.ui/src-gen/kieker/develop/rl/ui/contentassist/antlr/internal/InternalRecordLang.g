/*
 * generated by Xtext
 */
grammar InternalRecordLang;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package kieker.develop.rl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package kieker.develop.rl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import kieker.develop.rl.services.RecordLangGrammarAccess;

}

@parser::members {
 
 	private RecordLangGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(RecordLangGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleBaseType
entryRuleBaseType 
:
{ before(grammarAccess.getBaseTypeRule()); }
	 ruleBaseType
{ after(grammarAccess.getBaseTypeRule()); } 
	 EOF 
;

// Rule BaseType
ruleBaseType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBaseTypeAccess().getNameAssignment()); }
(rule__BaseType__NameAssignment)
{ after(grammarAccess.getBaseTypeAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComplexType
entryRuleComplexType 
:
{ before(grammarAccess.getComplexTypeRule()); }
	 ruleComplexType
{ after(grammarAccess.getComplexTypeRule()); } 
	 EOF 
;

// Rule ComplexType
ruleComplexType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComplexTypeAccess().getAlternatives()); }
(rule__ComplexType__Alternatives)
{ after(grammarAccess.getComplexTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplateType
entryRuleTemplateType 
:
{ before(grammarAccess.getTemplateTypeRule()); }
	 ruleTemplateType
{ after(grammarAccess.getTemplateTypeRule()); } 
	 EOF 
;

// Rule TemplateType
ruleTemplateType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateTypeAccess().getGroup()); }
(rule__TemplateType__Group__0)
{ after(grammarAccess.getTemplateTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordType
entryRuleRecordType 
:
{ before(grammarAccess.getRecordTypeRule()); }
	 ruleRecordType
{ after(grammarAccess.getRecordTypeRule()); } 
	 EOF 
;

// Rule RecordType
ruleRecordType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordTypeAccess().getGroup()); }
(rule__RecordType__Group__0)
{ after(grammarAccess.getRecordTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getGroup()); }
(rule__Constant__Group__0)
{ after(grammarAccess.getConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getGroup()); }
(rule__Property__Group__0)
{ after(grammarAccess.getPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForeignKey
entryRuleForeignKey 
:
{ before(grammarAccess.getForeignKeyRule()); }
	 ruleForeignKey
{ after(grammarAccess.getForeignKeyRule()); } 
	 EOF 
;

// Rule ForeignKey
ruleForeignKey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForeignKeyAccess().getGroup()); }
(rule__ForeignKey__Group__0)
{ after(grammarAccess.getForeignKeyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifier
entryRuleClassifier 
:
{ before(grammarAccess.getClassifierRule()); }
	 ruleClassifier
{ after(grammarAccess.getClassifierRule()); } 
	 EOF 
;

// Rule Classifier
ruleClassifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierAccess().getGroup()); }
(rule__Classifier__Group__0)
{ after(grammarAccess.getClassifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArraySize
entryRuleArraySize 
:
{ before(grammarAccess.getArraySizeRule()); }
	 ruleArraySize
{ after(grammarAccess.getArraySizeRule()); } 
	 EOF 
;

// Rule ArraySize
ruleArraySize
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArraySizeAccess().getGroup()); }
(rule__ArraySize__Group__0)
{ after(grammarAccess.getArraySizeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayLiteral
entryRuleArrayLiteral 
:
{ before(grammarAccess.getArrayLiteralRule()); }
	 ruleArrayLiteral
{ after(grammarAccess.getArrayLiteralRule()); } 
	 EOF 
;

// Rule ArrayLiteral
ruleArrayLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayLiteralAccess().getGroup()); }
(rule__ArrayLiteral__Group__0)
{ after(grammarAccess.getArrayLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
(rule__StringLiteral__ValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntLiteral
entryRuleIntLiteral 
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
(rule__IntLiteral__ValueAssignment)
{ after(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral 
:
{ before(grammarAccess.getFloatLiteralRule()); }
	 ruleFloatLiteral
{ after(grammarAccess.getFloatLiteralRule()); } 
	 EOF 
;

// Rule FloatLiteral
ruleFloatLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatLiteralAccess().getValueAssignment()); }
(rule__FloatLiteral__ValueAssignment)
{ after(grammarAccess.getFloatLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
(rule__BooleanLiteral__ValueAssignment)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantLiteral
entryRuleConstantLiteral 
:
{ before(grammarAccess.getConstantLiteralRule()); }
	 ruleConstantLiteral
{ after(grammarAccess.getConstantLiteralRule()); } 
	 EOF 
;

// Rule ConstantLiteral
ruleConstantLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantLiteralAccess().getValueAssignment()); }
(rule__ConstantLiteral__ValueAssignment)
{ after(grammarAccess.getConstantLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInValueLiteral
entryRuleBuiltInValueLiteral 
:
{ before(grammarAccess.getBuiltInValueLiteralRule()); }
	 ruleBuiltInValueLiteral
{ after(grammarAccess.getBuiltInValueLiteralRule()); } 
	 EOF 
;

// Rule BuiltInValueLiteral
ruleBuiltInValueLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltInValueLiteralAccess().getGroup()); }
(rule__BuiltInValueLiteral__Group__0)
{ after(grammarAccess.getBuiltInValueLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule PropertyModifier
rulePropertyModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyModifierAccess().getAlternatives()); }
(rule__PropertyModifier__Alternatives)
{ after(grammarAccess.getPropertyModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ComplexType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeAccess().getRecordTypeParserRuleCall_0()); }
	ruleRecordType
{ after(grammarAccess.getComplexTypeAccess().getRecordTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getComplexTypeAccess().getTemplateTypeParserRuleCall_1()); }
	ruleTemplateType
{ after(grammarAccess.getComplexTypeAccess().getTemplateTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Alternatives_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getPropertiesAssignment_5_1_0()); }
(rule__TemplateType__PropertiesAssignment_5_1_0)
{ after(grammarAccess.getTemplateTypeAccess().getPropertiesAssignment_5_1_0()); }
)

    |(
{ before(grammarAccess.getTemplateTypeAccess().getConstantsAssignment_5_1_1()); }
(rule__TemplateType__ConstantsAssignment_5_1_1)
{ after(grammarAccess.getTemplateTypeAccess().getConstantsAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Alternatives_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getPropertiesAssignment_7_1_0()); }
(rule__RecordType__PropertiesAssignment_7_1_0)
{ after(grammarAccess.getRecordTypeAccess().getPropertiesAssignment_7_1_0()); }
)

    |(
{ before(grammarAccess.getRecordTypeAccess().getConstantsAssignment_7_1_1()); }
(rule__RecordType__ConstantsAssignment_7_1_1)
{ after(grammarAccess.getRecordTypeAccess().getConstantsAssignment_7_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeAssignment_2_0()); }
(rule__Property__TypeAssignment_2_0)
{ after(grammarAccess.getPropertyAccess().getTypeAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getGroup_2_1()); }
(rule__Property__Group_2_1__0)
{ after(grammarAccess.getPropertyAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_0()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_1()); }
	ruleIntLiteral
{ after(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_2()); }
	ruleFloatLiteral
{ after(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_3()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getConstantLiteralParserRuleCall_4()); }
	ruleConstantLiteral
{ after(grammarAccess.getLiteralAccess().getConstantLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getArrayLiteralParserRuleCall_5()); }
	ruleArrayLiteral
{ after(grammarAccess.getLiteralAccess().getArrayLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBuiltInValueLiteralParserRuleCall_6()); }
	ruleBuiltInValueLiteral
{ after(grammarAccess.getLiteralAccess().getBuiltInValueLiteralParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyModifierAccess().getTRANSIENTEnumLiteralDeclaration_0()); }
(	'transient' 
)
{ after(grammarAccess.getPropertyModifierAccess().getTRANSIENTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPropertyModifierAccess().getINCREMENTEnumLiteralDeclaration_1()); }
(	'auto-increment' 
)
{ after(grammarAccess.getPropertyModifierAccess().getINCREMENTEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getModelAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
(rule__Model__NameAssignment_1)
{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_2()); }
(rule__Model__ImportsAssignment_2)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getTypesAssignment_3()); }
(rule__Model__TypesAssignment_3)*
{ after(grammarAccess.getModelAccess().getTypesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemplateType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group__0__Impl
	rule__TemplateType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getGroup_0()); }
(rule__TemplateType__Group_0__0)?
{ after(grammarAccess.getTemplateTypeAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group__1__Impl
	rule__TemplateType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getGroup_1()); }
(rule__TemplateType__Group_1__0)?
{ after(grammarAccess.getTemplateTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group__2__Impl
	rule__TemplateType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getTemplateKeyword_2()); }

	'template' 

{ after(grammarAccess.getTemplateTypeAccess().getTemplateKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group__3__Impl
	rule__TemplateType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getNameAssignment_3()); }
(rule__TemplateType__NameAssignment_3)
{ after(grammarAccess.getTemplateTypeAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group__4__Impl
	rule__TemplateType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getGroup_4()); }
(rule__TemplateType__Group_4__0)?
{ after(grammarAccess.getTemplateTypeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getGroup_5()); }
(rule__TemplateType__Group_5__0)?
{ after(grammarAccess.getTemplateTypeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TemplateType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group_0__0__Impl
	rule__TemplateType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getAuthorKeyword_0_0()); }

	'@author' 

{ after(grammarAccess.getTemplateTypeAccess().getAuthorKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getAuthorAssignment_0_1()); }
(rule__TemplateType__AuthorAssignment_0_1)
{ after(grammarAccess.getTemplateTypeAccess().getAuthorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemplateType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group_1__0__Impl
	rule__TemplateType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getSinceKeyword_1_0()); }

	'@since' 

{ after(grammarAccess.getTemplateTypeAccess().getSinceKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getSinceAssignment_1_1()); }
(rule__TemplateType__SinceAssignment_1_1)
{ after(grammarAccess.getTemplateTypeAccess().getSinceAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemplateType__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group_4__0__Impl
	rule__TemplateType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getColonKeyword_4_0()); }

	':' 

{ after(grammarAccess.getTemplateTypeAccess().getColonKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateType__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group_4__1__Impl
	rule__TemplateType__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getParentsAssignment_4_1()); }
(rule__TemplateType__ParentsAssignment_4_1)
{ after(grammarAccess.getTemplateTypeAccess().getParentsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateType__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getGroup_4_2()); }
(rule__TemplateType__Group_4_2__0)*
{ after(grammarAccess.getTemplateTypeAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TemplateType__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group_4_2__0__Impl
	rule__TemplateType__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getTemplateTypeAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateType__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getParentsAssignment_4_2_1()); }
(rule__TemplateType__ParentsAssignment_4_2_1)
{ after(grammarAccess.getTemplateTypeAccess().getParentsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemplateType__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group_5__0__Impl
	rule__TemplateType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getLeftCurlyBracketKeyword_5_0()); }

	'{' 

{ after(grammarAccess.getTemplateTypeAccess().getLeftCurlyBracketKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateType__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group_5__1__Impl
	rule__TemplateType__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getAlternatives_5_1()); }
(rule__TemplateType__Alternatives_5_1)*
{ after(grammarAccess.getTemplateTypeAccess().getAlternatives_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateType__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateType__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getRightCurlyBracketKeyword_5_2()); }

	'}' 

{ after(grammarAccess.getTemplateTypeAccess().getRightCurlyBracketKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RecordType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group__0__Impl
	rule__RecordType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getGroup_0()); }
(rule__RecordType__Group_0__0)?
{ after(grammarAccess.getRecordTypeAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group__1__Impl
	rule__RecordType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getGroup_1()); }
(rule__RecordType__Group_1__0)?
{ after(grammarAccess.getRecordTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group__2__Impl
	rule__RecordType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getAbstractAssignment_2()); }
(rule__RecordType__AbstractAssignment_2)?
{ after(grammarAccess.getRecordTypeAccess().getAbstractAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group__3__Impl
	rule__RecordType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getEntityKeyword_3()); }

	'entity' 

{ after(grammarAccess.getRecordTypeAccess().getEntityKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group__4__Impl
	rule__RecordType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getNameAssignment_4()); }
(rule__RecordType__NameAssignment_4)
{ after(grammarAccess.getRecordTypeAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group__5__Impl
	rule__RecordType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getGroup_5()); }
(rule__RecordType__Group_5__0)?
{ after(grammarAccess.getRecordTypeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group__6__Impl
	rule__RecordType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getGroup_6()); }
(rule__RecordType__Group_6__0)?
{ after(grammarAccess.getRecordTypeAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getGroup_7()); }
(rule__RecordType__Group_7__0)?
{ after(grammarAccess.getRecordTypeAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__RecordType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_0__0__Impl
	rule__RecordType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getAuthorKeyword_0_0()); }

	'@author' 

{ after(grammarAccess.getRecordTypeAccess().getAuthorKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getAuthorAssignment_0_1()); }
(rule__RecordType__AuthorAssignment_0_1)
{ after(grammarAccess.getRecordTypeAccess().getAuthorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_1__0__Impl
	rule__RecordType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getSinceKeyword_1_0()); }

	'@since' 

{ after(grammarAccess.getRecordTypeAccess().getSinceKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getSinceAssignment_1_1()); }
(rule__RecordType__SinceAssignment_1_1)
{ after(grammarAccess.getRecordTypeAccess().getSinceAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordType__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_5__0__Impl
	rule__RecordType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getExtendsKeyword_5_0()); }

	'extends' 

{ after(grammarAccess.getRecordTypeAccess().getExtendsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getParentAssignment_5_1()); }
(rule__RecordType__ParentAssignment_5_1)
{ after(grammarAccess.getRecordTypeAccess().getParentAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordType__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_6__0__Impl
	rule__RecordType__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getColonKeyword_6_0()); }

	':' 

{ after(grammarAccess.getRecordTypeAccess().getColonKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_6__1__Impl
	rule__RecordType__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getParentsAssignment_6_1()); }
(rule__RecordType__ParentsAssignment_6_1)
{ after(grammarAccess.getRecordTypeAccess().getParentsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getGroup_6_2()); }
(rule__RecordType__Group_6_2__0)*
{ after(grammarAccess.getRecordTypeAccess().getGroup_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RecordType__Group_6_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_6_2__0__Impl
	rule__RecordType__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_6_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getCommaKeyword_6_2_0()); }

	',' 

{ after(grammarAccess.getRecordTypeAccess().getCommaKeyword_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group_6_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_6_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getParentsAssignment_6_2_1()); }
(rule__RecordType__ParentsAssignment_6_2_1)
{ after(grammarAccess.getRecordTypeAccess().getParentsAssignment_6_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordType__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_7__0__Impl
	rule__RecordType__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getLeftCurlyBracketKeyword_7_0()); }

	'{' 

{ after(grammarAccess.getRecordTypeAccess().getLeftCurlyBracketKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_7__1__Impl
	rule__RecordType__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getAlternatives_7_1()); }
(rule__RecordType__Alternatives_7_1)*
{ after(grammarAccess.getRecordTypeAccess().getAlternatives_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordType__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getRightCurlyBracketKeyword_7_2()); }

	'}' 

{ after(grammarAccess.getRecordTypeAccess().getRightCurlyBracketKeyword_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Constant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getConstKeyword_0()); }

	'const' 

{ after(grammarAccess.getConstantAccess().getConstKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__1__Impl
	rule__Constant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getTypeAssignment_1()); }
(rule__Constant__TypeAssignment_1)
{ after(grammarAccess.getConstantAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__2__Impl
	rule__Constant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameAssignment_2()); }
(rule__Constant__NameAssignment_2)
{ after(grammarAccess.getConstantAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__3__Impl
	rule__Constant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getConstantAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueAssignment_4()); }
(rule__Constant__ValueAssignment_4)
{ after(grammarAccess.getConstantAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getModifiersAssignment_0()); }
(rule__Property__ModifiersAssignment_0)*
{ after(grammarAccess.getPropertyAccess().getModifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getForeignKeyAssignment_1()); }
(rule__Property__ForeignKeyAssignment_1)?
{ after(grammarAccess.getPropertyAccess().getForeignKeyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__2__Impl
	rule__Property__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives_2()); }
(rule__Property__Alternatives_2)
{ after(grammarAccess.getPropertyAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__3__Impl
	rule__Property__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameAssignment_3()); }
(rule__Property__NameAssignment_3)
{ after(grammarAccess.getPropertyAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_4()); }
(rule__Property__Group_4__0)?
{ after(grammarAccess.getPropertyAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Property__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_2_1__0__Impl
	rule__Property__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAliasKeyword_2_1_0()); }

	'alias' 

{ after(grammarAccess.getPropertyAccess().getAliasKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_2_1__1__Impl
	rule__Property__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getReferToAssignment_2_1_1()); }
(rule__Property__ReferToAssignment_2_1_1)
{ after(grammarAccess.getPropertyAccess().getReferToAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAsKeyword_2_1_2()); }

	'as' 

{ after(grammarAccess.getPropertyAccess().getAsKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Property__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_4__0__Impl
	rule__Property__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getEqualsSignKeyword_4_0()); }

	'=' 

{ after(grammarAccess.getPropertyAccess().getEqualsSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getValueAssignment_4_1()); }
(rule__Property__ValueAssignment_4_1)
{ after(grammarAccess.getPropertyAccess().getValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForeignKey__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeignKey__Group__0__Impl
	rule__ForeignKey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyAccess().getGroupedKeyword_0()); }

	'grouped' 

{ after(grammarAccess.getForeignKeyAccess().getGroupedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKey__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeignKey__Group__1__Impl
	rule__ForeignKey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyAccess().getByKeyword_1()); }

	'by' 

{ after(grammarAccess.getForeignKeyAccess().getByKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKey__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeignKey__Group__2__Impl
	rule__ForeignKey__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyAccess().getRecordTypeAssignment_2()); }
(rule__ForeignKey__RecordTypeAssignment_2)
{ after(grammarAccess.getForeignKeyAccess().getRecordTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKey__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeignKey__Group__3__Impl
	rule__ForeignKey__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyAccess().getFullStopKeyword_3()); }

	'.' 

{ after(grammarAccess.getForeignKeyAccess().getFullStopKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKey__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeignKey__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyAccess().getPropertyRefAssignment_4()); }
(rule__ForeignKey__PropertyRefAssignment_4)
{ after(grammarAccess.getForeignKeyAccess().getPropertyRefAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Classifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Classifier__Group__0__Impl
	rule__Classifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierAccess().getTypeAssignment_0()); }
(rule__Classifier__TypeAssignment_0)
{ after(grammarAccess.getClassifierAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Classifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Classifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierAccess().getSizesAssignment_1()); }
(rule__Classifier__SizesAssignment_1)*
{ after(grammarAccess.getClassifierAccess().getSizesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArraySize__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArraySize__Group__0__Impl
	rule__ArraySize__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySize__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArraySizeAccess().getArraySizeAction_0()); }
(

)
{ after(grammarAccess.getArraySizeAccess().getArraySizeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArraySize__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArraySize__Group__1__Impl
	rule__ArraySize__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySize__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArraySizeAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getArraySizeAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArraySize__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArraySize__Group__2__Impl
	rule__ArraySize__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySize__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArraySizeAccess().getSizeAssignment_2()); }
(rule__ArraySize__SizeAssignment_2)?
{ after(grammarAccess.getArraySizeAccess().getSizeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArraySize__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArraySize__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySize__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArraySizeAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getArraySizeAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArrayLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__0__Impl
	rule__ArrayLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getArrayLiteralAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__1__Impl
	rule__ArrayLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getLiteralsAssignment_1()); }
(rule__ArrayLiteral__LiteralsAssignment_1)
{ after(grammarAccess.getArrayLiteralAccess().getLiteralsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__2__Impl
	rule__ArrayLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getGroup_2()); }
(rule__ArrayLiteral__Group_2__0)*
{ after(grammarAccess.getArrayLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getArrayLiteralAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArrayLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group_2__0__Impl
	rule__ArrayLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getArrayLiteralAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getLiteralsAssignment_2_1()); }
(rule__ArrayLiteral__LiteralsAssignment_2_1)
{ after(grammarAccess.getArrayLiteralAccess().getLiteralsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BuiltInValueLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuiltInValueLiteral__Group__0__Impl
	rule__BuiltInValueLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInValueLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInValueLiteralAccess().getBuiltInValueLiteralAction_0()); }
(

)
{ after(grammarAccess.getBuiltInValueLiteralAccess().getBuiltInValueLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltInValueLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuiltInValueLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInValueLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInValueLiteralAccess().getValueAssignment_1()); }
(rule__BuiltInValueLiteral__ValueAssignment_1)
{ after(grammarAccess.getBuiltInValueLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup_1()); }
(rule__QualifiedNameWithWildcard__Group_1__0)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__0__Impl
	rule__QualifiedNameWithWildcard__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_1_1()); }

	'*' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TypesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getTypesComplexTypeParserRuleCall_3_0()); }
	ruleComplexType{ after(grammarAccess.getModelAccess().getTypesComplexTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseType__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseTypeAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getBaseTypeAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__AuthorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getAuthorSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getTemplateTypeAccess().getAuthorSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__SinceAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getSinceSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getTemplateTypeAccess().getSinceSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getTemplateTypeAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__ParentsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getParentsTemplateTypeCrossReference_4_1_0()); }
(
{ before(grammarAccess.getTemplateTypeAccess().getParentsTemplateTypeQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTemplateTypeAccess().getParentsTemplateTypeQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getTemplateTypeAccess().getParentsTemplateTypeCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__ParentsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getParentsTemplateTypeCrossReference_4_2_1_0()); }
(
{ before(grammarAccess.getTemplateTypeAccess().getParentsTemplateTypeQualifiedNameParserRuleCall_4_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTemplateTypeAccess().getParentsTemplateTypeQualifiedNameParserRuleCall_4_2_1_0_1()); }
)
{ after(grammarAccess.getTemplateTypeAccess().getParentsTemplateTypeCrossReference_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__PropertiesAssignment_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getPropertiesPropertyParserRuleCall_5_1_0_0()); }
	ruleProperty{ after(grammarAccess.getTemplateTypeAccess().getPropertiesPropertyParserRuleCall_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateType__ConstantsAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateTypeAccess().getConstantsConstantParserRuleCall_5_1_1_0()); }
	ruleConstant{ after(grammarAccess.getTemplateTypeAccess().getConstantsConstantParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__AuthorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getAuthorSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getRecordTypeAccess().getAuthorSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__SinceAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getSinceSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getRecordTypeAccess().getSinceSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__AbstractAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getAbstractAbstractKeyword_2_0()); }
(
{ before(grammarAccess.getRecordTypeAccess().getAbstractAbstractKeyword_2_0()); }

	'abstract' 

{ after(grammarAccess.getRecordTypeAccess().getAbstractAbstractKeyword_2_0()); }
)

{ after(grammarAccess.getRecordTypeAccess().getAbstractAbstractKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getRecordTypeAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__ParentAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getParentRecordTypeCrossReference_5_1_0()); }
(
{ before(grammarAccess.getRecordTypeAccess().getParentRecordTypeQualifiedNameParserRuleCall_5_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRecordTypeAccess().getParentRecordTypeQualifiedNameParserRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getRecordTypeAccess().getParentRecordTypeCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__ParentsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getParentsTemplateTypeCrossReference_6_1_0()); }
(
{ before(grammarAccess.getRecordTypeAccess().getParentsTemplateTypeQualifiedNameParserRuleCall_6_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRecordTypeAccess().getParentsTemplateTypeQualifiedNameParserRuleCall_6_1_0_1()); }
)
{ after(grammarAccess.getRecordTypeAccess().getParentsTemplateTypeCrossReference_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__ParentsAssignment_6_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getParentsTemplateTypeCrossReference_6_2_1_0()); }
(
{ before(grammarAccess.getRecordTypeAccess().getParentsTemplateTypeQualifiedNameParserRuleCall_6_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRecordTypeAccess().getParentsTemplateTypeQualifiedNameParserRuleCall_6_2_1_0_1()); }
)
{ after(grammarAccess.getRecordTypeAccess().getParentsTemplateTypeCrossReference_6_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__PropertiesAssignment_7_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getPropertiesPropertyParserRuleCall_7_1_0_0()); }
	ruleProperty{ after(grammarAccess.getRecordTypeAccess().getPropertiesPropertyParserRuleCall_7_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__ConstantsAssignment_7_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTypeAccess().getConstantsConstantParserRuleCall_7_1_1_0()); }
	ruleConstant{ after(grammarAccess.getRecordTypeAccess().getConstantsConstantParserRuleCall_7_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getTypeClassifierParserRuleCall_1_0()); }
	ruleClassifier{ after(grammarAccess.getConstantAccess().getTypeClassifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueLiteralParserRuleCall_4_0()); }
	ruleLiteral{ after(grammarAccess.getConstantAccess().getValueLiteralParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ModifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getModifiersPropertyModifierEnumRuleCall_0_0()); }
	rulePropertyModifier{ after(grammarAccess.getPropertyAccess().getModifiersPropertyModifierEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ForeignKeyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getForeignKeyForeignKeyParserRuleCall_1_0()); }
	ruleForeignKey{ after(grammarAccess.getPropertyAccess().getForeignKeyForeignKeyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeClassifierParserRuleCall_2_0_0()); }
	ruleClassifier{ after(grammarAccess.getPropertyAccess().getTypeClassifierParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ReferToAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getReferToPropertyCrossReference_2_1_1_0()); }
(
{ before(grammarAccess.getPropertyAccess().getReferToPropertyIDTerminalRuleCall_2_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPropertyAccess().getReferToPropertyIDTerminalRuleCall_2_1_1_0_1()); }
)
{ after(grammarAccess.getPropertyAccess().getReferToPropertyCrossReference_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getValueLiteralParserRuleCall_4_1_0()); }
	ruleLiteral{ after(grammarAccess.getPropertyAccess().getValueLiteralParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__RecordTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyAccess().getRecordTypeRecordTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getForeignKeyAccess().getRecordTypeRecordTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getForeignKeyAccess().getRecordTypeRecordTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getForeignKeyAccess().getRecordTypeRecordTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__PropertyRefAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeignKeyAccess().getPropertyRefPropertyCrossReference_4_0()); }
(
{ before(grammarAccess.getForeignKeyAccess().getPropertyRefPropertyIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getForeignKeyAccess().getPropertyRefPropertyIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getForeignKeyAccess().getPropertyRefPropertyCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierAccess().getTypeBaseTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getClassifierAccess().getTypeBaseTypeIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getClassifierAccess().getTypeBaseTypeIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getClassifierAccess().getTypeBaseTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__SizesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierAccess().getSizesArraySizeParserRuleCall_1_0()); }
	ruleArraySize{ after(grammarAccess.getClassifierAccess().getSizesArraySizeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySize__SizeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArraySizeAccess().getSizeINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getArraySizeAccess().getSizeINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__LiteralsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getLiteralsLiteralParserRuleCall_1_0()); }
	ruleLiteral{ after(grammarAccess.getArrayLiteralAccess().getLiteralsLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__LiteralsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getLiteralsLiteralParserRuleCall_2_1_0()); }
	ruleLiteral{ after(grammarAccess.getArrayLiteralAccess().getLiteralsLiteralParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_0()); }
	RULE_FLOAT{ after(grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueBOOLEANTerminalRuleCall_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getBooleanLiteralAccess().getValueBOOLEANTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantLiteralAccess().getValueConstantCrossReference_0()); }
(
{ before(grammarAccess.getConstantLiteralAccess().getValueConstantIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getConstantLiteralAccess().getValueConstantIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getConstantLiteralAccess().getValueConstantCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInValueLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInValueLiteralAccess().getValueKIEKER_VERSIONKeyword_1_0()); }
(
{ before(grammarAccess.getBuiltInValueLiteralAccess().getValueKIEKER_VERSIONKeyword_1_0()); }

	'KIEKER_VERSION' 

{ after(grammarAccess.getBuiltInValueLiteralAccess().getValueKIEKER_VERSIONKeyword_1_0()); }
)

{ after(grammarAccess.getBuiltInValueLiteralAccess().getValueKIEKER_VERSIONKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


fragment RULE_NUMBER : '0'..'9';

RULE_INT : '-'? RULE_NUMBER+;

RULE_FLOAT : ('-'? RULE_NUMBER+ '.' RULE_NUMBER* (('e'|'E') ('+'|'-')? RULE_NUMBER+)? 'f'?|'-'? RULE_NUMBER+ 'f');

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


